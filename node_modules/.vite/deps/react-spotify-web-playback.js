import {
  require_jsx_runtime
} from "./chunk-XDXTT64O.js";
import {
  require_react
} from "./chunk-SRNGOEPD.js";
import {
  __commonJS,
  __toESM
} from "./chunk-NISBT54A.js";

// node_modules/nano-css/index.js
var require_nano_css = __commonJS({
  "node_modules/nano-css/index.js"(exports) {
    "use strict";
    var KEBAB_REGEX = /[A-Z]/g;
    var hash = function(str) {
      var h = 5381, i = str.length;
      while (i)
        h = h * 33 ^ str.charCodeAt(--i);
      return "_" + (h >>> 0).toString(36);
    };
    exports.create = function(config) {
      config = config || {};
      var assign = config.assign || Object.assign;
      var client = typeof window === "object";
      if (true) {
        if (client) {
          if (typeof document !== "object" || !document.getElementsByTagName("HTML")) {
            console.error('nano-css detected browser environment because of "window" global, but "document" global seems to be defective.');
          }
        }
      }
      var renderer = assign({
        raw: "",
        pfx: "_",
        client,
        assign,
        stringify: JSON.stringify,
        kebab: function(prop) {
          return prop.replace(KEBAB_REGEX, "-$&").toLowerCase();
        },
        decl: function(key, value) {
          key = renderer.kebab(key);
          return key + ":" + value + ";";
        },
        hash: function(obj) {
          return hash(renderer.stringify(obj));
        },
        selector: function(parent, selector) {
          return parent + (selector[0] === ":" ? "" : " ") + selector;
        },
        putRaw: function(rawCssRule) {
          renderer.raw += rawCssRule;
        }
      }, config);
      if (renderer.client) {
        if (!renderer.sh)
          document.head.appendChild(renderer.sh = document.createElement("style"));
        if (true) {
          renderer.sh.setAttribute("data-nano-css-dev", "");
          renderer.shTest = document.createElement("style");
          renderer.shTest.setAttribute("data-nano-css-dev-tests", "");
          document.head.appendChild(renderer.shTest);
        }
        renderer.putRaw = function(rawCssRule) {
          if (false) {
            var sheet = renderer.sh.sheet;
            try {
              sheet.insertRule(rawCssRule, sheet.cssRules.length);
            } catch (error) {
            }
          } else {
            try {
              renderer.shTest.sheet.insertRule(rawCssRule, renderer.shTest.sheet.cssRules.length);
            } catch (error) {
              if (config.verbose) {
                console.error(error);
              }
            }
            renderer.sh.appendChild(document.createTextNode(rawCssRule));
          }
        };
      }
      renderer.put = function(selector, decls, atrule) {
        var str = "";
        var prop, value;
        var postponed = [];
        for (prop in decls) {
          value = decls[prop];
          if (value instanceof Object && !(value instanceof Array)) {
            postponed.push(prop);
          } else {
            if (!renderer.sourcemaps) {
              str += "    " + renderer.decl(prop, value, selector, atrule) + "\n";
            } else {
              str += renderer.decl(prop, value, selector, atrule);
            }
          }
        }
        if (str) {
          if (!renderer.sourcemaps) {
            str = "\n" + selector + " {\n" + str + "}\n";
          } else {
            str = selector + "{" + str + "}";
          }
          renderer.putRaw(atrule ? atrule + "{" + str + "}" : str);
        }
        for (var i = 0; i < postponed.length; i++) {
          prop = postponed[i];
          if (prop[0] === "@" && prop !== "@font-face") {
            renderer.putAt(selector, decls[prop], prop);
          } else {
            renderer.put(renderer.selector(selector, prop), decls[prop], atrule);
          }
        }
      };
      renderer.putAt = renderer.put;
      return renderer;
    };
  }
});

// node_modules/nano-css/addon/cache.js
var require_cache = __commonJS({
  "node_modules/nano-css/addon/cache.js"(exports) {
    "use strict";
    exports.addon = function(renderer) {
      var cache = {};
      renderer.cache = function(css) {
        if (!css)
          return "";
        var key = renderer.hash(css);
        if (!cache[key]) {
          cache[key] = renderer.rule(css, key);
        }
        return cache[key];
      };
    };
  }
});

// node_modules/nano-css/addon/__dev__/warnOnMissingDependencies.js
var require_warnOnMissingDependencies = __commonJS({
  "node_modules/nano-css/addon/__dev__/warnOnMissingDependencies.js"(exports, module) {
    "use strict";
    var pkgName = "nano-css";
    module.exports = function warnOnMissingDependencies(addon, renderer, deps) {
      var missing = [];
      for (var i = 0; i < deps.length; i++) {
        var name = deps[i];
        if (!renderer[name]) {
          missing.push(name);
        }
      }
      if (missing.length) {
        var str = 'Addon "' + addon + '" is missing the following dependencies:';
        for (var j = 0; j < missing.length; j++) {
          str += '\n require("' + pkgName + "/addon/" + missing[j] + '").addon(nano);';
        }
        throw new Error(str);
      }
    };
  }
});

// node_modules/nano-css/addon/jsx.js
var require_jsx = __commonJS({
  "node_modules/nano-css/addon/jsx.js"(exports) {
    "use strict";
    var addonCache = require_cache().addon;
    exports.addon = function(renderer) {
      if (!renderer.cache) {
        addonCache(renderer);
      }
      if (true) {
        require_warnOnMissingDependencies()("jsx", renderer, ["rule", "cache"]);
      }
      renderer.jsx = function(fn, styles, block) {
        var className;
        var isElement = typeof fn === "string";
        if (true) {
          className = renderer.rule(styles, block);
        }
        var Component2 = function(props) {
          if (!className) {
            className = renderer.rule(styles, block);
          }
          var copy = props;
          var $as = copy.$as;
          var $ref = copy.$ref;
          if (true) {
            copy = renderer.assign({}, props);
          }
          var dynamicClassName = renderer.cache(props.css);
          delete copy.css;
          delete copy.$as;
          if (isElement || $as) {
            delete copy.$ref;
            copy.ref = $ref;
          }
          copy.className = (props.className || "") + className + dynamicClassName;
          return isElement || $as ? renderer.h($as || fn, copy) : fn(copy);
        };
        if (true) {
          if (block) {
            Component2.displayName = "jsx(" + block + ")";
          }
        }
        return Component2;
      };
    };
  }
});

// node_modules/nano-css/addon/keyframes.js
var require_keyframes = __commonJS({
  "node_modules/nano-css/addon/keyframes.js"(exports) {
    "use strict";
    exports.addon = function(renderer, config) {
      if (true) {
        require_warnOnMissingDependencies()("keyframes", renderer, ["putRaw", "put"]);
      }
      config = renderer.assign({
        prefixes: ["-webkit-", "-moz-", "-o-", ""]
      }, config || {});
      var prefixes = config.prefixes;
      if (renderer.client) {
        document.head.appendChild(renderer.ksh = document.createElement("style"));
      }
      var putAt = renderer.putAt;
      renderer.putAt = function(__, keyframes2, prelude) {
        if (prelude[1] === "k") {
          var str = "";
          for (var keyframe in keyframes2) {
            var decls = keyframes2[keyframe];
            var strDecls = "";
            for (var prop in decls)
              strDecls += renderer.decl(prop, decls[prop]);
            str += keyframe + "{" + strDecls + "}";
          }
          for (var i = 0; i < prefixes.length; i++) {
            var prefix = prefixes[i];
            var rawKeyframes = prelude.replace("@keyframes", "@" + prefix + "keyframes") + "{" + str + "}";
            if (renderer.client) {
              renderer.ksh.appendChild(document.createTextNode(rawKeyframes));
            } else {
              renderer.putRaw(rawKeyframes);
            }
          }
          return;
        }
        putAt(__, keyframes2, prelude);
      };
      renderer.keyframes = function(keyframes2, block) {
        if (!block)
          block = renderer.hash(keyframes2);
        block = renderer.pfx + block;
        renderer.putAt("", keyframes2, "@keyframes " + block);
        return block;
      };
    };
  }
});

// node_modules/nano-css/addon/nesting.js
var require_nesting = __commonJS({
  "node_modules/nano-css/addon/nesting.js"(exports) {
    "use strict";
    exports.addon = function(renderer) {
      renderer.selector = function(parentSelectors, selector) {
        var parents = parentSelectors.split(",");
        var result = [];
        var selectors = selector.split(",");
        var len1 = parents.length;
        var len2 = selectors.length;
        var i, j, sel, pos, parent, replacedSelector;
        for (i = 0; i < len2; i++) {
          sel = selectors[i];
          pos = sel.indexOf("&");
          if (pos > -1) {
            for (j = 0; j < len1; j++) {
              parent = parents[j];
              replacedSelector = sel.replace(/&/g, parent);
              result.push(replacedSelector);
            }
          } else {
            for (j = 0; j < len1; j++) {
              parent = parents[j];
              if (parent) {
                result.push(parent + " " + sel);
              } else {
                result.push(sel);
              }
            }
          }
        }
        return result.join(",");
      };
    };
  }
});

// node_modules/nano-css/addon/rule.js
var require_rule = __commonJS({
  "node_modules/nano-css/addon/rule.js"(exports) {
    "use strict";
    exports.addon = function(renderer) {
      if (true) {
        require_warnOnMissingDependencies()("rule", renderer, ["put"]);
      }
      var blocks;
      if (true) {
        blocks = {};
      }
      renderer.rule = function(css, block) {
        if (true) {
          if (block) {
            if (typeof block !== "string") {
              throw new TypeError('nano-css block name must be a string. For example, use nano.rule({color: "red", "RedText").');
            }
            if (blocks[block]) {
              console.error('Block name "' + block + '" used more than once.');
            }
            blocks[block] = 1;
          }
        }
        block = block || renderer.hash(css);
        block = renderer.pfx + block;
        renderer.put("." + block, css);
        return " " + block;
      };
    };
  }
});

// node_modules/nano-css/addon/style.js
var require_style = __commonJS({
  "node_modules/nano-css/addon/style.js"(exports) {
    "use strict";
    exports.addon = function(renderer) {
      if (true) {
        require_warnOnMissingDependencies()("style", renderer, ["jsx"]);
      }
      renderer.style = function(fn, styles, dynamicTemplate, block) {
        var jsxComponent = renderer.jsx(fn, styles, block);
        var Component2 = function(props) {
          var copy = props;
          if (true) {
            copy = Object.assign({}, props);
          }
          if (dynamicTemplate) {
            copy.css = dynamicTemplate(props);
          }
          return jsxComponent(copy);
        };
        if (true) {
          if (block || typeof fn === "function") {
            Component2.displayName = "style(" + (block || fn.displayName || fn.name) + ")";
          }
        }
        return Component2;
      };
    };
  }
});

// node_modules/nano-css/addon/styled.js
var require_styled = __commonJS({
  "node_modules/nano-css/addon/styled.js"(exports) {
    "use strict";
    var tags = [
      "a",
      "abbr",
      "address",
      "area",
      "article",
      "aside",
      "audio",
      "b",
      "base",
      "bdi",
      "bdo",
      "big",
      "blockquote",
      "body",
      "br",
      "button",
      "canvas",
      "caption",
      "cite",
      "code",
      "col",
      "colgroup",
      "data",
      "datalist",
      "dd",
      "del",
      "details",
      "dfn",
      "dialog",
      "div",
      "dl",
      "dt",
      "em",
      "embed",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hgroup",
      "hr",
      "html",
      "i",
      "iframe",
      "img",
      "input",
      "ins",
      "kbd",
      "keygen",
      "label",
      "legend",
      "li",
      "link",
      "main",
      "map",
      "mark",
      "marquee",
      "menu",
      "menuitem",
      "meta",
      "meter",
      "nav",
      "noscript",
      "object",
      "ol",
      "optgroup",
      "option",
      "output",
      "p",
      "param",
      "picture",
      "pre",
      "progress",
      "q",
      "rp",
      "rt",
      "ruby",
      "s",
      "samp",
      "script",
      "section",
      "select",
      "small",
      "source",
      "span",
      "strong",
      "style",
      "sub",
      "summary",
      "sup",
      "table",
      "tbody",
      "td",
      "textarea",
      "tfoot",
      "th",
      "thead",
      "time",
      "title",
      "tr",
      "track",
      "u",
      "ul",
      "var",
      "video",
      "wbr",
      "circle",
      "clipPath",
      "defs",
      "ellipse",
      "foreignObject",
      "g",
      "image",
      "line",
      "linearGradient",
      "mask",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "radialGradient",
      "rect",
      "stop",
      "svg",
      "text",
      "tspan"
    ];
    exports.addon = function(renderer) {
      if (true) {
        require_warnOnMissingDependencies()("styled", renderer, ["style"]);
      }
      var styled2 = function(tag2) {
        return function(styles, dynamicTemplate, block) {
          return renderer.style(tag2, styles, dynamicTemplate, block);
        };
      };
      var tag;
      for (var i = 0; i < tags.length; i++) {
        tag = tags[i];
        styled2[tag] = styled2(tag);
      }
      renderer.styled = styled2;
    };
  }
});

// node_modules/exenv/index.js
var require_exenv = __commonJS({
  "node_modules/exenv/index.js"(exports, module) {
    (function() {
      "use strict";
      var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
      var ExecutionEnvironment = {
        canUseDOM,
        canUseWorkers: typeof Worker !== "undefined",
        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
        canUseViewport: canUseDOM && !!window.screen
      };
      if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define(function() {
          return ExecutionEnvironment;
        });
      } else if (typeof module !== "undefined" && module.exports) {
        module.exports = ExecutionEnvironment;
      } else {
        window.ExecutionEnvironment = ExecutionEnvironment;
      }
    })();
  }
});

// node_modules/react-spotify-web-playback/esm/index.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var React9 = __toESM(require_react());

// node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var cache = null;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (cache && cache.lastThis === this && isEqual2(newArgs, cache.lastArgs)) {
      return cache.lastResult;
    }
    var lastResult = resultFn.apply(this, newArgs);
    cache = {
      lastResult,
      lastArgs: newArgs,
      lastThis: this
    };
    return lastResult;
  }
  memoized.clear = function clear() {
    cache = null;
  };
  return memoized;
}

// node_modules/react-spotify-web-playback/esm/components/Actions.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());

// node_modules/react-spotify-web-playback/esm/components/Devices.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var React3 = __toESM(require_react());

// node_modules/react-spotify-web-playback/esm/components/ClickOutside.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var React = __toESM(require_react());
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ClickOutside = function(_super) {
  __extends(ClickOutside2, _super);
  function ClickOutside2(props) {
    var _this = _super.call(this, props) || this;
    Object.defineProperty(_this, "container", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "isTouch", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "handleClick", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(event) {
        if (event.type === "touchend") {
          _this.isTouch = true;
        }
        if (event.type === "click" && _this.isTouch) {
          return;
        }
        var onClick = _this.props.onClick;
        var el = _this.container;
        if (el && !el.contains(event.target)) {
          onClick();
        }
      }
    });
    _this.container = null;
    _this.setRef = _this.setRef.bind(_this);
    _this.isTouch = false;
    return _this;
  }
  Object.defineProperty(ClickOutside2.prototype, "componentDidMount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      document.addEventListener("touchend", this.handleClick, true);
      document.addEventListener("click", this.handleClick, true);
    }
  });
  Object.defineProperty(ClickOutside2.prototype, "componentWillUnmount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      document.removeEventListener("touchend", this.handleClick, true);
      document.removeEventListener("click", this.handleClick, true);
    }
  });
  Object.defineProperty(ClickOutside2.prototype, "setRef", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(ref) {
      this.container = ref;
    }
  });
  Object.defineProperty(ClickOutside2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _a2 = this.props, children = _a2.children, onClick = _a2.onClick, props = __rest(_a2, ["children", "onClick"]);
      return (0, import_jsx_runtime.jsx)("div", __assign({}, props, { ref: this.setRef }, { children }));
    }
  });
  return ClickOutside2;
}(React.PureComponent);
var ClickOutside_default = ClickOutside;

// node_modules/react-spotify-web-playback/esm/components/icons/Devices.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
function DevicesIcon(props) {
  return (0, import_jsx_runtime2.jsx)("svg", __assign2({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime2.jsx)("path", { d: "M6.765 89.483h40.412v6.765H6.269C2.765 96.248 0 93.483 0 89.978V20.703c0-3.504 2.765-6.27 6.27-6.27h40.907v6.766H6.765v68.285zm16.327 20.702a3.4 3.4 0 0 1 3.383-3.383h20.702v6.765H26.475c-.915 0-1.72-.347-2.344-1.038a3.064 3.064 0 0 1-1.039-2.344zm46.681-95.752h51.958c3.504 0 6.269 2.765 6.269 6.269v86.596c0 3.504-2.765 6.27-6.27 6.27H69.774c-3.504 0-6.27-2.766-6.27-6.27V20.702c0-3.504 2.766-6.27 6.27-6.27zm-.496 5.842l.07 87.52 52.88-.07-.07-87.45h-52.88zm13.89 45.573c3.464-3.462 7.714-5.23 12.585-5.23 9.827 0 17.815 7.988 17.815 17.815 0 9.827-7.988 17.815-17.815 17.815-9.827 0-17.815-7.988-17.815-17.815 0-4.87 1.768-9.122 5.23-12.585zm4.124 21.045c2.381 2.381 5.195 3.582 8.46 3.582 6.598 0 12.043-5.445 12.043-12.042 0-6.597-5.445-12.043-12.042-12.043-6.597 0-12.042 5.446-12.042 12.043 0 3.266 1.2 6.08 3.581 8.46zm12.935-44.466c-1.247 1.247-2.741 1.863-4.474 1.863-3.504 0-6.27-2.765-6.27-6.269s2.766-6.27 6.27-6.27c3.504 0 6.27 2.766 6.27 6.27 0 1.72-.608 3.218-1.796 4.406z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/styles.js
var React2 = __toESM(require_react());
var import_nano_css = __toESM(require_nano_css());
var import_jsx = __toESM(require_jsx());
var import_keyframes = __toESM(require_keyframes());
var import_nesting = __toESM(require_nesting());
var import_rule = __toESM(require_rule());
var import_style = __toESM(require_style());
var import_styled = __toESM(require_styled());
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var nano = (0, import_nano_css.create)({ h: React2.createElement });
(0, import_rule.addon)(nano);
(0, import_keyframes.addon)(nano);
(0, import_jsx.addon)(nano);
(0, import_style.addon)(nano);
(0, import_styled.addon)(nano);
(0, import_nesting.addon)(nano);
var _a = nano;
var keyframes = _a.keyframes;
var put = _a.put;
var styled = _a.styled;
var px = function(value) {
  return typeof value === "number" ? "".concat(value, "px") : value;
};
function getMergedStyles(styles) {
  return __assign3({ activeColor: "#1cb954", altColor: "#ccc", bgColor: "#fff", color: "#333", errorColor: "#a60000", height: 48, loaderColor: "#ccc", loaderSize: 32, sliderColor: "#666", sliderHandleBorderRadius: "50%", sliderHandleColor: "#000", sliderHeight: 4, sliderTrackBorderRadius: 0, sliderTrackColor: "#ccc", trackArtistColor: "#666", trackNameColor: "#333" }, styles);
}

// node_modules/react-spotify-web-playback/esm/components/Devices.js
var __extends2 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var Wrapper = styled("div")({
  "pointer-events": "all",
  position: "relative",
  zIndex: 20,
  "> div": {
    display: "flex",
    flexDirection: "column",
    padding: px(8),
    position: "absolute",
    right: "-".concat(px(3)),
    button: {
      display: "block",
      padding: px(8),
      whiteSpace: "nowrap",
      "&.rswp__devices__active": {
        fontWeight: "bold"
      }
    }
  },
  "> button": {
    fontSize: px(26)
  }
}, function(_a2) {
  var _b;
  var style = _a2.style;
  return {
    "> button": {
      color: style.c
    },
    "> div": (_b = {
      backgroundColor: style.bgColor,
      boxShadow: style.altColor ? "1px 1px 10px ".concat(style.altColor) : "none"
    }, _b[style.p] = "120%", _b.button = {
      color: style.c
    }, _b)
  };
}, "DevicesRSWP");
var Devices = function(_super) {
  __extends2(Devices2, _super);
  function Devices2(props) {
    var _this = _super.call(this, props) || this;
    Object.defineProperty(_this, "handleClickSetDevice", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(event) {
        var onClickDevice = _this.props.onClickDevice;
        var dataset = event.currentTarget.dataset;
        if (dataset.id) {
          onClickDevice(dataset.id);
          _this.setState({ isOpen: false });
        }
      }
    });
    Object.defineProperty(_this, "handleClickToggleDevices", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        _this.setState(function(state) {
          return { isOpen: !state.isOpen };
        });
      }
    });
    _this.state = {
      isOpen: props.open
    };
    return _this;
  }
  Object.defineProperty(Devices2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _this = this;
      var isOpen = this.state.isOpen;
      var _a2 = this.props, currentDeviceId = _a2.currentDeviceId, deviceId = _a2.deviceId, devices = _a2.devices, playerPosition = _a2.playerPosition, _b = _a2.styles, activeColor = _b.activeColor, altColor = _b.altColor, bgColor = _b.bgColor, color = _b.color, title = _a2.title;
      return (0, import_jsx_runtime3.jsx)(Wrapper, __assign4({ style: {
        altColor,
        bgColor,
        c: currentDeviceId && deviceId && currentDeviceId !== deviceId ? activeColor : color,
        p: playerPosition
      } }, { children: !!devices.length && (0, import_jsx_runtime3.jsxs)(import_jsx_runtime3.Fragment, { children: [isOpen && (0, import_jsx_runtime3.jsx)(ClickOutside_default, __assign4({ onClick: this.handleClickToggleDevices }, { children: devices.map(function(d) {
        return (0, import_jsx_runtime3.jsx)("button", __assign4({ className: d.id === currentDeviceId ? "rswp__devices__active" : void 0, "data-id": d.id, onClick: _this.handleClickSetDevice, type: "button" }, { children: d.name }), d.id);
      }) })), (0, import_jsx_runtime3.jsx)("button", __assign4({ "aria-label": title, onClick: this.handleClickToggleDevices, title, type: "button" }, { children: (0, import_jsx_runtime3.jsx)(DevicesIcon, {}) }))] }) }));
    }
  });
  return Devices2;
}(React3.PureComponent);
var Devices_default = Devices;

// node_modules/react-spotify-web-playback/esm/components/Volume.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var React5 = __toESM(require_react());

// node_modules/@gilbarbara/react-range-slider/esm/index.js
var React4 = __toESM(require_react());

// node_modules/deepmerge-ts/dist/node/index.mjs
function getObjectType(object) {
  if (typeof object !== "object" || object === null) {
    return 0;
  }
  if (Array.isArray(object)) {
    return 2;
  }
  if (isRecord(object)) {
    return 1;
  }
  if (object instanceof Set) {
    return 3;
  }
  if (object instanceof Map) {
    return 4;
  }
  return 5;
}
function getKeys(objects) {
  const keys = /* @__PURE__ */ new Set();
  for (const object of objects) {
    for (const key of [
      ...Object.keys(object),
      ...Object.getOwnPropertySymbols(object)
    ]) {
      keys.add(key);
    }
  }
  return keys;
}
function objectHasProperty(object, property) {
  return typeof object === "object" && Object.prototype.propertyIsEnumerable.call(object, property);
}
function getIterableOfIterables(iterables) {
  return {
    *[Symbol.iterator]() {
      for (const iterable of iterables) {
        for (const value of iterable) {
          yield value;
        }
      }
    }
  };
}
var validRecordToStringValues = /* @__PURE__ */ new Set([
  "[object Object]",
  "[object Module]"
]);
function isRecord(value) {
  if (!validRecordToStringValues.has(Object.prototype.toString.call(value))) {
    return false;
  }
  const { constructor } = value;
  if (constructor === void 0) {
    return true;
  }
  const prototype = constructor.prototype;
  if (prototype === null || typeof prototype !== "object" || !validRecordToStringValues.has(Object.prototype.toString.call(prototype))) {
    return false;
  }
  if (!prototype.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  return true;
}
var defaultMergeFunctions = {
  mergeMaps: defaultMergeMaps,
  mergeSets: defaultMergeSets,
  mergeArrays: defaultMergeArrays,
  mergeRecords: defaultMergeRecords,
  mergeOthers: leaf
};
var actions = {
  defaultMerge: Symbol("deepmerge-ts: default merge"),
  skip: Symbol("deepmerge-ts: skip")
};
function defaultMetaDataUpdater(previousMeta, metaMeta) {
  return metaMeta;
}
function deepmerge(...objects) {
  return deepmergeCustom({})(...objects);
}
function deepmergeCustom(options, rootMetaData) {
  const utils = getUtils(options, customizedDeepmerge);
  function customizedDeepmerge(...objects) {
    return mergeUnknowns(objects, utils, rootMetaData);
  }
  return customizedDeepmerge;
}
function getUtils(options, customizedDeepmerge) {
  var _a2, _b;
  return {
    defaultMergeFunctions,
    mergeFunctions: {
      ...defaultMergeFunctions,
      ...Object.fromEntries(Object.entries(options).filter(([key, option]) => Object.prototype.hasOwnProperty.call(defaultMergeFunctions, key)).map(([key, option]) => option === false ? [key, leaf] : [key, option]))
    },
    metaDataUpdater: (_a2 = options.metaDataUpdater) !== null && _a2 !== void 0 ? _a2 : defaultMetaDataUpdater,
    deepmerge: customizedDeepmerge,
    useImplicitDefaultMerging: (_b = options.enableImplicitDefaultMerging) !== null && _b !== void 0 ? _b : false,
    actions
  };
}
function mergeUnknowns(values, utils, meta) {
  if (values.length === 0) {
    return void 0;
  }
  if (values.length === 1) {
    return mergeOthers(values, utils, meta);
  }
  const type = getObjectType(values[0]);
  if (type !== 0 && type !== 5) {
    for (let m_index = 1; m_index < values.length; m_index++) {
      if (getObjectType(values[m_index]) === type) {
        continue;
      }
      return mergeOthers(values, utils, meta);
    }
  }
  switch (type) {
    case 1:
      return mergeRecords(values, utils, meta);
    case 2:
      return mergeArrays(values, utils, meta);
    case 3:
      return mergeSets(values, utils, meta);
    case 4:
      return mergeMaps(values, utils, meta);
    default:
      return mergeOthers(values, utils, meta);
  }
}
function mergeRecords(values, utils, meta) {
  const result = utils.mergeFunctions.mergeRecords(values, utils, meta);
  if (result === actions.defaultMerge || utils.useImplicitDefaultMerging && result === void 0 && utils.mergeFunctions.mergeRecords !== utils.defaultMergeFunctions.mergeRecords) {
    return utils.defaultMergeFunctions.mergeRecords(values, utils, meta);
  }
  return result;
}
function mergeArrays(values, utils, meta) {
  const result = utils.mergeFunctions.mergeArrays(values, utils, meta);
  if (result === actions.defaultMerge || utils.useImplicitDefaultMerging && result === void 0 && utils.mergeFunctions.mergeArrays !== utils.defaultMergeFunctions.mergeArrays) {
    return utils.defaultMergeFunctions.mergeArrays(values);
  }
  return result;
}
function mergeSets(values, utils, meta) {
  const result = utils.mergeFunctions.mergeSets(values, utils, meta);
  if (result === actions.defaultMerge || utils.useImplicitDefaultMerging && result === void 0 && utils.mergeFunctions.mergeSets !== utils.defaultMergeFunctions.mergeSets) {
    return utils.defaultMergeFunctions.mergeSets(values);
  }
  return result;
}
function mergeMaps(values, utils, meta) {
  const result = utils.mergeFunctions.mergeMaps(values, utils, meta);
  if (result === actions.defaultMerge || utils.useImplicitDefaultMerging && result === void 0 && utils.mergeFunctions.mergeMaps !== utils.defaultMergeFunctions.mergeMaps) {
    return utils.defaultMergeFunctions.mergeMaps(values);
  }
  return result;
}
function mergeOthers(values, utils, meta) {
  const result = utils.mergeFunctions.mergeOthers(values, utils, meta);
  if (result === actions.defaultMerge || utils.useImplicitDefaultMerging && result === void 0 && utils.mergeFunctions.mergeOthers !== utils.defaultMergeFunctions.mergeOthers) {
    return utils.defaultMergeFunctions.mergeOthers(values);
  }
  return result;
}
function defaultMergeRecords(values, utils, meta) {
  const result = {};
  for (const key of getKeys(values)) {
    const propValues = [];
    for (const value of values) {
      if (objectHasProperty(value, key)) {
        propValues.push(value[key]);
      }
    }
    if (propValues.length === 0) {
      continue;
    }
    const updatedMeta = utils.metaDataUpdater(meta, {
      key,
      parents: values
    });
    const propertyResult = mergeUnknowns(propValues, utils, updatedMeta);
    if (propertyResult === actions.skip) {
      continue;
    }
    if (key === "__proto__") {
      Object.defineProperty(result, key, {
        value: propertyResult,
        configurable: true,
        enumerable: true,
        writable: true
      });
    } else {
      result[key] = propertyResult;
    }
  }
  return result;
}
function defaultMergeArrays(values) {
  return values.flat();
}
function defaultMergeSets(values) {
  return new Set(getIterableOfIterables(values));
}
function defaultMergeMaps(values) {
  return new Map(getIterableOfIterables(values));
}
function leaf(values) {
  return values[values.length - 1];
}

// node_modules/@gilbarbara/react-range-slider/esm/utils.js
var __read = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function getBaseProps(props) {
  var _a2, _b, _c, _d, _e, _f, _g;
  return {
    axis: (_a2 = props === null || props === void 0 ? void 0 : props.axis) !== null && _a2 !== void 0 ? _a2 : "x",
    xMax: (_b = props === null || props === void 0 ? void 0 : props.xMax) !== null && _b !== void 0 ? _b : 100,
    xMin: (_c = props === null || props === void 0 ? void 0 : props.xMin) !== null && _c !== void 0 ? _c : 0,
    xStep: (_d = props === null || props === void 0 ? void 0 : props.xStep) !== null && _d !== void 0 ? _d : 1,
    yMax: (_e = props === null || props === void 0 ? void 0 : props.yMax) !== null && _e !== void 0 ? _e : 100,
    yMin: (_f = props === null || props === void 0 ? void 0 : props.yMin) !== null && _f !== void 0 ? _f : 0,
    yStep: (_g = props === null || props === void 0 ? void 0 : props.yStep) !== null && _g !== void 0 ? _g : 1
  };
}
function getCoordinates(event, lastPosition) {
  if ("touches" in event) {
    var _a2 = __read(__spreadArray([], __read(Array.from(event.touches)), false), 1), touch = _a2[0];
    return {
      x: touch ? touch.clientX : lastPosition.x,
      y: touch ? touch.clientY : lastPosition.y
    };
  }
  return {
    x: event.clientX,
    y: event.clientY
  };
}
function getPosition(position, props, el) {
  var _a2 = getBaseProps(props), axis = _a2.axis, xMax = _a2.xMax, xMin = _a2.xMin, xStep = _a2.xStep, yMax = _a2.yMax, yMin = _a2.yMin, yStep = _a2.yStep;
  var _b = (el === null || el === void 0 ? void 0 : el.getBoundingClientRect()) || {}, _c = _b.height, height = _c === void 0 ? xMax : _c, _d = _b.width, width = _d === void 0 ? yMax : _d;
  var x = position.x, y = position.y;
  var dx = 0;
  var dy = 0;
  if (x < 0) {
    x = 0;
  }
  if (x > width) {
    x = width;
  }
  if (y < 0) {
    y = 0;
  }
  if (y > height) {
    y = height;
  }
  if (axis === "x" || axis === "xy") {
    dx = Math.round(x / width * (xMax - xMin));
  }
  if (axis === "y" || axis === "xy") {
    dy = Math.round(y / height * (yMax - yMin));
  }
  return {
    x: round(dx, xStep),
    y: round(dy, yStep)
  };
}
function getNormalizedValue(name, props) {
  var value = props[name] || 0;
  var min = name === "x" ? props.xMin : props.yMin;
  var max = name === "x" ? props.xMax : props.yMax;
  if (isNumber(min) && value < min) {
    return min;
  }
  if (isNumber(max) && value > max) {
    return max;
  }
  return value;
}
function isNumber(value) {
  return typeof value === "number";
}
function isUndefined(value) {
  return typeof value === "undefined";
}
function parseNumber(value) {
  if (typeof value === "number") {
    return value;
  }
  return parseInt(value, 10);
}
function removeProperties(input) {
  var filter = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    filter[_i - 1] = arguments[_i];
  }
  var output = {};
  for (var key in input) {
    if ({}.hasOwnProperty.call(input, key)) {
      if (!filter.includes(key)) {
        output[key] = input[key];
      }
    }
  }
  return output;
}
function round(value, increment) {
  return Math.ceil(value / increment) * increment;
}

// node_modules/@gilbarbara/react-range-slider/esm/styles.js
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var defaultOptions = {
  height: "20px",
  padding: "6px",
  rangeColor: "#007bff",
  thumbBorder: "2px solid #000",
  thumbBorderRadius: "4px",
  thumbBorderRadiusXY: "50%",
  thumbColor: "#fff",
  thumbSize: "10px",
  thumbSizeXY: "20px",
  thumbSpace: "6px",
  trackBorderRadius: "3px",
  trackColor: "#ccc",
  width: "20px"
};
function getStyles(styles) {
  var options = deepmerge(defaultOptions, styles ? styles.options : {});
  var slider = {
    boxSizing: "border-box",
    display: "inline-block",
    padding: options.padding,
    transition: "height 0.4s, width 0.4s"
  };
  var track = {
    backgroundColor: options.trackColor,
    borderRadius: options.trackBorderRadius,
    boxSizing: "border-box",
    height: "100%",
    position: "relative",
    width: "100%"
  };
  var range = {
    backgroundColor: options.rangeColor,
    borderRadius: options.trackBorderRadius,
    position: "absolute"
  };
  var rail = {
    boxSizing: "border-box",
    height: options.height,
    position: "absolute",
    transition: "height 0.4s, width 0.4s",
    width: options.width
  };
  var thumb = {
    backgroundColor: options.thumbColor,
    border: options.thumbBorder,
    borderRadius: options.thumbBorderRadius,
    boxSizing: "border-box",
    display: "block",
    position: "absolute",
    transition: "height 0.4s, width 0.4s"
  };
  var defaultStyles = {
    rail,
    rangeX: __assign5(__assign5({}, range), { height: "100%", top: 0 }),
    rangeXY: __assign5(__assign5({}, range), { bottom: 0 }),
    rangeY: __assign5(__assign5({}, range), { bottom: 0, left: 0, width: "100%" }),
    sliderX: __assign5(__assign5({}, slider), { height: parseNumber(options.height) + parseNumber(options.padding) * 2, width: "100%" }),
    sliderXY: __assign5(__assign5({}, slider), { height: "100%", width: "100%" }),
    sliderY: __assign5(__assign5({}, slider), { height: "100%", width: parseNumber(options.width) + parseNumber(options.padding) * 2 }),
    thumbX: __assign5(__assign5({}, thumb), { height: parseNumber(options.height) + parseNumber(options.thumbSpace), left: -(parseNumber(options.thumbSize) / 2), top: -(parseNumber(options.thumbSpace) / 2), width: options.thumbSize }),
    thumbXY: __assign5(__assign5({}, thumb), { backgroundColor: "transparent", border: options.thumbBorder, borderRadius: options.thumbBorderRadiusXY, bottom: -(parseNumber(options.thumbSizeXY) / 2), height: options.thumbSizeXY, left: -(parseNumber(options.thumbSizeXY) / 2), position: "absolute", width: options.thumbSizeXY }),
    thumbY: __assign5(__assign5({}, thumb), { bottom: -(parseNumber(options.thumbSize) / 2), height: options.thumbSize, left: -(parseNumber(options.thumbSpace) / 2), width: parseNumber(options.width) + parseNumber(options.thumbSpace) }),
    trackX: __assign5(__assign5({}, track), { height: options.height }),
    trackXY: __assign5(__assign5({}, track), { height: "100%", minHeight: "50px", width: "100%" }),
    trackY: __assign5(__assign5({}, track), { height: "100%", minHeight: "50px", width: options.width })
  };
  return deepmerge(defaultStyles, styles || {});
}

// node_modules/@gilbarbara/react-range-slider/esm/index.js
var __extends3 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var RangeSlider = function(_super) {
  __extends3(RangeSlider2, _super);
  function RangeSlider2(props) {
    var _this = _super.call(this, props) || this;
    _this.lastCoordinates = { x: 0, y: 0 };
    _this.mounted = false;
    _this.offset = { x: 0, y: 0 };
    _this.start = { x: 0, y: 0 };
    _this.getDragPosition = function(_a2) {
      var x = _a2.x, y = _a2.y;
      return {
        x: x + _this.start.x - _this.offset.x,
        y: _this.offset.y + _this.start.y - y
      };
    };
    _this.updateOptions = function(_a2) {
      var _b, _c, _d, _e, _f, _g, _h, _j;
      var x = _a2.x, y = _a2.y;
      var _k = _this, rail = _k.rail, track = _k.track;
      _this.start = {
        x: (_c = (_b = rail.current) === null || _b === void 0 ? void 0 : _b.offsetLeft) !== null && _c !== void 0 ? _c : 0,
        y: ((_e = (_d = track.current) === null || _d === void 0 ? void 0 : _d.offsetHeight) !== null && _e !== void 0 ? _e : 0) - ((_g = (_f = rail.current) === null || _f === void 0 ? void 0 : _f.offsetTop) !== null && _g !== void 0 ? _g : 0) - ((_j = (_h = rail.current) === null || _h === void 0 ? void 0 : _h.offsetHeight) !== null && _j !== void 0 ? _j : 0)
      };
      _this.lastCoordinates = { x, y };
      _this.offset = { x, y };
    };
    _this.updatePosition = function(position) {
      _this.setState(getPosition(position, _this.props, _this.slider.current));
    };
    _this.handleBlur = function() {
      document.removeEventListener("keydown", _this.handleKeydown);
    };
    _this.handleClickTrack = function(event) {
      var onAfterEnd = _this.props.onAfterEnd;
      var isDragging = _this.state.isDragging;
      if (!isDragging) {
        var element = event.currentTarget;
        var _a2 = getCoordinates(event, _this.lastCoordinates), x = _a2.x, y = _a2.y;
        var _b = element.getBoundingClientRect(), bottom = _b.bottom, left = _b.left;
        var nextPosition = {
          x: x - left,
          y: bottom - y
        };
        _this.lastCoordinates = { x, y };
        _this.updatePosition(nextPosition);
        if (onAfterEnd) {
          onAfterEnd(getPosition(nextPosition, _this.props, _this.slider.current), _this.props);
        }
      } else if (_this.mounted) {
        _this.setState({ isDragging: false });
      }
    };
    _this.handleDrag = function(event) {
      event.preventDefault();
      var coordinates = getCoordinates(event, _this.lastCoordinates);
      _this.updatePosition(_this.getDragPosition(coordinates));
      _this.lastCoordinates = coordinates;
    };
    _this.handleDragEnd = function(event) {
      event.preventDefault();
      var _a2 = _this.props, onAfterEnd = _a2.onAfterEnd, onDragEnd = _a2.onDragEnd;
      var position = getPosition(_this.getDragPosition(getCoordinates(event, _this.lastCoordinates)), _this.props, _this.slider.current);
      document.removeEventListener("mousemove", _this.handleDrag);
      document.removeEventListener("mouseup", _this.handleDragEnd);
      document.removeEventListener("touchmove", _this.handleDrag);
      document.removeEventListener("touchend", _this.handleDragEnd);
      document.removeEventListener("touchcancel", _this.handleDragEnd);
      if (onDragEnd) {
        onDragEnd(position, _this.props);
      }
      if (onAfterEnd) {
        onAfterEnd(position, _this.props);
      }
    };
    _this.handleFocus = function() {
      document.addEventListener("keydown", _this.handleKeydown, { passive: false });
    };
    _this.handleKeydown = function(event) {
      var _a2 = _this.state, innerX = _a2.x, innerY = _a2.y;
      var _b = _this.props, x = _b.x, y = _b.y;
      var _c = getBaseProps(_this.props), axis = _c.axis, xMax = _c.xMax, xMin = _c.xMin, xStep = _c.xStep, yMax = _c.yMax, yMin = _c.yMin, yStep = _c.yStep;
      var codes = { down: "ArrowDown", left: "ArrowLeft", up: "ArrowUp", right: "ArrowRight" };
      if (Object.values(codes).includes(event.code)) {
        event.preventDefault();
        var position = {
          x: isUndefined(x) ? innerX : getNormalizedValue("x", _this.props),
          y: isUndefined(y) ? innerY : getNormalizedValue("y", _this.props)
        };
        var xMinus = position.x - xStep <= xMin ? xMin : position.x - xStep;
        var xPlus = position.x + xStep >= xMax ? xMax : position.x + xStep;
        var yMinus = position.y - yStep <= yMin ? yMin : position.y - yStep;
        var yPlus = position.y + yStep >= yMax ? yMax : position.y + yStep;
        switch (event.code) {
          case codes.up: {
            if (axis === "x") {
              position.x = xPlus;
            } else {
              position.y = yPlus;
            }
            break;
          }
          case codes.down: {
            if (axis === "x") {
              position.x = xMinus;
            } else {
              position.y = yMinus;
            }
            break;
          }
          case codes.left: {
            if (axis === "y") {
              position.y = yMinus;
            } else {
              position.x = xMinus;
            }
            break;
          }
          case codes.right:
          default: {
            if (axis === "y") {
              position.y = yPlus;
            } else {
              position.x = xPlus;
            }
            break;
          }
        }
        _this.setState(position);
      }
    };
    _this.handleMouseDown = function(event) {
      event.preventDefault();
      _this.updateOptions(getCoordinates(event, _this.lastCoordinates));
      _this.setState({ isDragging: true });
      document.addEventListener("mousemove", _this.handleDrag);
      document.addEventListener("mouseup", _this.handleDragEnd);
    };
    _this.handleTouchStart = function(event) {
      event.preventDefault();
      _this.updateOptions(getCoordinates(event, _this.lastCoordinates));
      document.addEventListener("touchmove", _this.handleDrag, { passive: false });
      document.addEventListener("touchend", _this.handleDragEnd, { passive: false });
      document.addEventListener("touchcancel", _this.handleDragEnd, { passive: false });
    };
    _this.slider = React4.createRef();
    _this.rail = React4.createRef();
    _this.track = React4.createRef();
    _this.state = {
      isDragging: false,
      x: getNormalizedValue("x", props),
      y: getNormalizedValue("y", props)
    };
    return _this;
  }
  RangeSlider2.prototype.componentDidMount = function() {
    this.mounted = true;
  };
  RangeSlider2.prototype.componentDidUpdate = function(_, previousState) {
    var _a2 = this.state, x = _a2.x, y = _a2.y;
    var onChange = this.props.onChange;
    var previousX = previousState.x, previousY = previousState.y;
    if (onChange && (x !== previousX || y !== previousY)) {
      onChange({ x, y }, this.props);
    }
  };
  RangeSlider2.prototype.componentWillUnmount = function() {
    this.mounted = false;
  };
  Object.defineProperty(RangeSlider2.prototype, "position", {
    get: function() {
      var _a2 = getBaseProps(this.props), axis = _a2.axis, xMax = _a2.xMax, xMin = _a2.xMin, yMax = _a2.yMax, yMin = _a2.yMin;
      var bottom = (this.y - yMin) / (yMax - yMin) * 100;
      var left = (this.x - xMin) / (xMax - xMin) * 100;
      if (bottom > 100) {
        bottom = 100;
      }
      if (bottom < 0) {
        bottom = 0;
      }
      if (axis === "x") {
        bottom = 0;
      }
      if (left > 100) {
        left = 100;
      }
      if (left < 0) {
        left = 0;
      }
      if (axis === "y") {
        left = 0;
      }
      return { x: left, y: bottom };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(RangeSlider2.prototype, "styles", {
    get: function() {
      var styles = this.props.styles;
      return getStyles(styles);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(RangeSlider2.prototype, "x", {
    get: function() {
      var innerX = this.state.x;
      var x = this.props.x;
      return isUndefined(x) ? innerX : x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(RangeSlider2.prototype, "y", {
    get: function() {
      var innerY = this.state.y;
      var y = this.props.y;
      return isUndefined(y) ? innerY : y;
    },
    enumerable: false,
    configurable: true
  });
  RangeSlider2.prototype.render = function() {
    var _a2 = this.props, axis = _a2.axis, className = _a2.className, xMax = _a2.xMax, xMin = _a2.xMin, yMax = _a2.yMax, yMin = _a2.yMin;
    var rest = removeProperties(this.props, "axis", "className", "onAfterEnd", "onChange", "onDragEnd", "styles", "x", "xMin", "xMax", "xStep", "y", "yMin", "yMax", "yStep");
    var _b = this.position, xPos = _b.x, yPos = _b.y;
    var position = { left: "".concat(xPos, "%"), bottom: "".concat(yPos, "%") };
    var size = {};
    var orientation;
    var range;
    var slider;
    var thumb;
    var track;
    var valuemax = xMax;
    var valuemin = xMin;
    var valuenow = this.x;
    if (axis === "x") {
      size.width = "".concat(xPos, "%");
      slider = this.styles.sliderX;
      orientation = "horizontal";
      range = this.styles.rangeX;
      track = this.styles.trackX;
      thumb = this.styles.thumbX;
    }
    if (axis === "y") {
      size.height = "".concat(yPos, "%");
      slider = this.styles.sliderY;
      range = this.styles.rangeY;
      track = this.styles.trackY;
      thumb = this.styles.thumbY;
      orientation = "vertical";
      valuemax = yMax;
      valuemin = yMin;
      valuenow = this.y;
    }
    if (axis === "xy") {
      size.height = "".concat(yPos, "%");
      size.width = "".concat(xPos, "%");
      slider = this.styles.sliderXY;
      range = this.styles.rangeXY;
      track = this.styles.trackXY;
      thumb = this.styles.thumbXY;
    }
    return React4.createElement("div", __assign6({ ref: this.slider, className, style: slider }, rest), React4.createElement("div", {
      ref: this.track,
      className: className && "".concat(className, "__track"),
      onClick: this.handleClickTrack,
      role: "presentation",
      style: track
    }, React4.createElement("div", { className: className && "".concat(className, "__range"), style: __assign6(__assign6({}, size), range) }), React4.createElement("div", {
      ref: this.rail,
      onMouseDown: this.handleMouseDown,
      onTouchStart: this.handleTouchStart,
      role: "presentation",
      style: __assign6(__assign6({}, this.styles.rail), position)
    }, React4.createElement("span", { "aria-label": "slider handle", "aria-orientation": orientation, "aria-valuemax": valuemax, "aria-valuemin": valuemin, "aria-valuenow": valuenow, className: className && "".concat(className, "__thumb"), onBlur: this.handleBlur, onFocus: this.handleFocus, role: "slider", style: thumb, tabIndex: 0 }))));
  };
  RangeSlider2.defaultProps = getBaseProps();
  return RangeSlider2;
}(React4.Component);
var esm_default = RangeSlider;

// node_modules/react-spotify-web-playback/esm/components/icons/VolumeHigh.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
function VolumeHigh(props) {
  return (0, import_jsx_runtime4.jsx)("svg", __assign7({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime4.jsx)("path", { d: "M0 85.869V40.38h21.24l39.41-22.743v90.974L21.24 85.87H0zm53.069 9.627V30.754L23.285 47.963H7.581v30.324h15.704L53.07 95.496zM92.355 18.86l4.889-5.723c13.772 12.64 21.94 30.407 21.94 49.724 0 19.318-8.168 37.085-21.94 49.725l-4.89-5.724c12.104-11.208 19.318-26.89 19.318-44 0-17.112-7.214-32.793-19.317-44.002zM75.303 38.835l4.889-5.724c5.246 5.008 9.062 11.209 11.149 18.542a41.69 41.69 0 0 1 1.55 11.21c0 11.506-4.77 22.12-12.7 29.75l-4.888-5.723c6.26-6.26 10.076-14.786 10.076-24.028 0-9.241-3.697-17.767-10.076-24.027z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/VolumeLow.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
function VolumeLow(props) {
  return (0, import_jsx_runtime5.jsx)("svg", __assign8({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime5.jsx)("path", { d: "M0 85.606V40.12h21.24l39.41-22.744v90.975L21.24 85.606H0zm53.069 9.627V30.492L23.285 47.7H7.581v30.325h15.704L53.07 95.233zm22.234-56.66l4.889-5.725c5.246 5.009 9.062 11.21 11.149 18.543a41.69 41.69 0 0 1 1.55 11.209c0 11.507-4.77 22.12-12.7 29.751l-4.888-5.724c6.26-6.26 10.076-14.786 10.076-24.027 0-9.242-3.697-17.768-10.076-24.028z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/VolumeMute.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
function VolumeMute(props) {
  return (0, import_jsx_runtime6.jsx)("svg", __assign9({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime6.jsx)("path", { d: "M127.993 83.387l-5.278 5.279-20.53-20.559L81.62 88.672l-5.233-5.292 20.55-20.522L76.38 42.3l5.248-5.248 20.557 20.558 20.522-20.551L128 42.293l-20.565 20.565 20.558 20.53zM0 85.607V40.118h21.24l39.41-22.744v90.975L21.24 85.606H0zm53.069 9.626V30.492L23.285 47.7H7.581v30.325h15.704L53.07 95.233z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/Volume.js
var __extends4 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var Wrapper2 = styled("div")({
  "pointer-events": "all",
  position: "relative",
  zIndex: 20,
  "> div": {
    display: "flex",
    flexDirection: "column",
    padding: px(12),
    position: "absolute",
    right: "-".concat(px(3))
  },
  "> button": {
    fontSize: px(26)
  },
  "@media (max-width: 1023px)": {
    display: "none"
  }
}, function(_a2) {
  var _b;
  var style = _a2.style;
  return {
    "> button": {
      color: style.c
    },
    "> div": (_b = {
      backgroundColor: style.bgColor,
      boxShadow: style.altColor ? "1px 1px 10px ".concat(style.altColor) : "none"
    }, _b[style.p] = "120%", _b)
  };
}, "VolumeRSWP");
var Volume = function(_super) {
  __extends4(Volume2, _super);
  function Volume2(props) {
    var _this = _super.call(this, props) || this;
    Object.defineProperty(_this, "timeout", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "handleClick", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        _this.setState(function(state) {
          return { isOpen: !state.isOpen };
        });
      }
    });
    Object.defineProperty(_this, "handleChangeSlider", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(_a2) {
        var y = _a2.y;
        var setVolume2 = _this.props.setVolume;
        var volume = Math.round(y) / 100;
        clearTimeout(_this.timeout);
        _this.timeout = window.setTimeout(function() {
          setVolume2(volume);
        }, 250);
        _this.setState({ volume });
      }
    });
    Object.defineProperty(_this, "handleAfterEnd", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        setTimeout(function() {
          _this.setState({ isOpen: false });
        }, 100);
      }
    });
    _this.state = {
      isOpen: false,
      volume: props.volume
    };
    return _this;
  }
  Object.defineProperty(Volume2.prototype, "componentDidUpdate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(previousProps) {
      var volumeState = this.state.volume;
      var volume = this.props.volume;
      if (previousProps.volume !== volume && volume !== volumeState) {
        this.setState({ volume });
      }
    }
  });
  Object.defineProperty(Volume2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _a2 = this.state, isOpen = _a2.isOpen, volume = _a2.volume;
      var _b = this.props, playerPosition = _b.playerPosition, _c = _b.styles, altColor = _c.altColor, bgColor = _c.bgColor, color = _c.color, title = _b.title;
      var icon = (0, import_jsx_runtime7.jsx)(VolumeHigh, {});
      if (volume === 0) {
        icon = (0, import_jsx_runtime7.jsx)(VolumeMute, {});
      } else if (volume <= 0.5) {
        icon = (0, import_jsx_runtime7.jsx)(VolumeLow, {});
      }
      return (0, import_jsx_runtime7.jsxs)(Wrapper2, __assign10({ style: { altColor, bgColor, c: color, p: playerPosition } }, { children: [isOpen && (0, import_jsx_runtime7.jsx)(ClickOutside_default, __assign10({ onClick: this.handleClick }, { children: (0, import_jsx_runtime7.jsx)(esm_default, { axis: "y", className: "rrs", onAfterEnd: this.handleAfterEnd, onChange: this.handleChangeSlider, styles: {
        options: {
          thumbBorder: "2px solid ".concat(color),
          thumbBorderRadius: 12,
          thumbColor: bgColor,
          thumbSize: 12,
          padding: 0,
          rangeColor: altColor || "#ccc",
          trackColor: color,
          width: 6
        }
      }, y: volume * 100, yMax: 100, yMin: 0 }) })), (0, import_jsx_runtime7.jsx)("button", __assign10({ "aria-label": title, onClick: !isOpen ? this.handleClick : void 0, title, type: "button" }, { children: icon }))] }));
    }
  });
  return Volume2;
}(React5.PureComponent);
var Volume_default = Volume;

// node_modules/react-spotify-web-playback/esm/components/Actions.js
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var Wrapper3 = styled("div")({
  alignItems: "center",
  display: "flex",
  justifyContent: "flex-end",
  paddingRight: px(10),
  "pointer-events": "none",
  "> div + div": {
    marginLeft: px(10)
  },
  "@media (max-width: 1023px)": {
    bottom: 0,
    position: "absolute",
    right: 0,
    width: "auto"
  }
}, function(_a2) {
  var style = _a2.style;
  return {
    height: px(style.h)
  };
}, "ActionsRSWP");
function Actions(props) {
  var currentDeviceId = props.currentDeviceId, deviceId = props.deviceId, devices = props.devices, isDevicesOpen = props.isDevicesOpen, locale = props.locale, onClickDevice = props.onClickDevice, playerPosition = props.playerPosition, setVolume2 = props.setVolume, styles = props.styles, volume = props.volume;
  return (0, import_jsx_runtime8.jsxs)(Wrapper3, __assign11({ style: { h: styles.height } }, { children: [currentDeviceId && (0, import_jsx_runtime8.jsx)(Volume_default, { playerPosition, setVolume: setVolume2, styles, title: locale.volume, volume }), (0, import_jsx_runtime8.jsx)(Devices_default, { currentDeviceId, deviceId, devices, onClickDevice, open: isDevicesOpen, playerPosition, styles, title: locale.devices })] }));
}

// node_modules/react-spotify-web-playback/esm/components/Content.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var Wrapper4 = styled("div")({
  alignItems: "center",
  display: "flex",
  flexDirection: "column",
  justifyContent: "center",
  position: "relative",
  "> *": {
    width: "100%",
    "@media (min-width: 1024px)": {
      width: "33.3333%"
    }
  },
  "@media (min-width: 1024px)": {
    flexDirection: "row"
  }
}, function(_a2) {
  var style = _a2.style;
  return {
    minHeight: px(style.h)
  };
}, "ContentRSWP");
function Content(_a2) {
  var children = _a2.children, styles = _a2.styles;
  return (0, import_jsx_runtime9.jsx)(Wrapper4, __assign12({ style: { h: styles.height } }, { children }));
}

// node_modules/react-spotify-web-playback/esm/components/Controls.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());

// node_modules/react-spotify-web-playback/esm/components/icons/Next.js
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
function Next(props) {
  return (0, import_jsx_runtime10.jsx)("svg", __assign13({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime10.jsx)("path", { d: "M98.91 53.749L5.817 0v128L98.91 74.251v47.93h23.273V5.819H98.909z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/Pause.js
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
function Pause(props) {
  return (0, import_jsx_runtime11.jsx)("svg", __assign14({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime11.jsx)("path", { d: "M41.86 128V0H8.648v128h33.21zm77.491 0V0h-33.21v128h33.21z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/Play.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
function Play(props) {
  return (0, import_jsx_runtime12.jsx)("svg", __assign15({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime12.jsx)("path", { d: "M119.351 64L8.65 0v128z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/Previous.js
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
function Previous(props) {
  return (0, import_jsx_runtime13.jsx)("svg", __assign16({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime13.jsx)("path", { d: "M29.09 53.749V5.819H5.819v116.363h23.273v-47.93L122.18 128V0z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/Controls.js
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
var Wrapper5 = styled("div")({}, function(_a2) {
  var style = _a2.style;
  return {
    alignItems: "center",
    display: "flex",
    height: px(style.h),
    justifyContent: "center",
    "@media (max-width: 767px)": {
      padding: px(10)
    },
    "> div": {
      minWidth: px(style.h),
      textAlign: "center"
    },
    button: {
      alignItems: "center",
      color: style.c,
      display: "inline-flex",
      fontSize: px(16),
      height: px(48),
      justifyContent: "center",
      width: px(48),
      "&.rswp__toggle": {
        fontSize: px(28)
      }
    }
  };
}, "ControlsRSWP");
function Controls(props) {
  var isExternalDevice = props.isExternalDevice, isPlaying = props.isPlaying, locale = props.locale, nextTracks = props.nextTracks, onClickNext = props.onClickNext, onClickPrevious = props.onClickPrevious, onClickTogglePlay = props.onClickTogglePlay, previousTracks = props.previousTracks, _a2 = props.styles, color = _a2.color, height = _a2.height;
  return (0, import_jsx_runtime14.jsxs)(Wrapper5, __assign17({ style: { c: color, h: height } }, { children: [(0, import_jsx_runtime14.jsx)("div", { children: (!!previousTracks.length || isExternalDevice) && (0, import_jsx_runtime14.jsx)("button", __assign17({ "aria-label": locale.previous, onClick: onClickPrevious, title: locale.previous, type: "button" }, { children: (0, import_jsx_runtime14.jsx)(Previous, {}) })) }), (0, import_jsx_runtime14.jsx)("div", { children: (0, import_jsx_runtime14.jsx)("button", __assign17({ "aria-label": isPlaying ? locale.pause : locale.play, className: "rswp__toggle", onClick: onClickTogglePlay, title: isPlaying ? locale.pause : locale.play, type: "button" }, { children: isPlaying ? (0, import_jsx_runtime14.jsx)(Pause, {}) : (0, import_jsx_runtime14.jsx)(Play, {}) })) }), (0, import_jsx_runtime14.jsx)("div", { children: (!!nextTracks.length || isExternalDevice) && (0, import_jsx_runtime14.jsx)("button", __assign17({ "aria-label": locale.next, onClick: onClickNext, title: locale.next, type: "button" }, { children: (0, import_jsx_runtime14.jsx)(Next, {}) })) })] }));
}

// node_modules/react-spotify-web-playback/esm/components/ErrorMessage.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
var Wrapper6 = styled("p")({
  textAlign: "center",
  width: "100%"
}, function(_a2) {
  var style = _a2.style;
  return {
    borderTop: "1px solid ".concat(style.errorColor),
    color: style.errorColor,
    height: px(style.h),
    lineHeight: px(style.h)
  };
}, "ErrorRSWP");
function ErrorMessage(_a2) {
  var children = _a2.children, _b = _a2.styles, errorColor = _b.errorColor, height = _b.height;
  return (0, import_jsx_runtime15.jsx)(Wrapper6, __assign18({ style: { errorColor, h: height } }, { children }));
}

// node_modules/react-spotify-web-playback/esm/components/Info.js
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var React6 = __toESM(require_react());

// node_modules/react-spotify-web-playback/esm/components/icons/Favorite.js
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
function Favorite(props) {
  return (0, import_jsx_runtime16.jsx)("svg", __assign19({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime16.jsx)("path", { d: "M117.686 16.288c-4.297-4.297-9.22-7.266-14.924-8.907-11.33-3.36-23.518-.86-32.582 6.72l-.781.546c-.938.703-3.282 1.641-5.392 1.641-2.187 0-4.688-1.172-5.313-1.64-.39-.235-.625-.391-.86-.548-9.063-7.579-21.252-10.08-32.582-6.72C13.922 10.74 4.39 19.96 1.187 32.072c-3.204 12.19.156 25.082 9.142 34.145L54.24 117.63c2.579 2.97 5.782 4.454 9.767 4.454 3.985 0 7.189-1.485 9.767-4.454l43.912-51.413C124.484 59.42 128 50.121 128 41.213c0-8.907-3.516-18.127-10.314-24.925z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/components/icons/FavoriteOutline.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
function FavoriteOutline(props) {
  return (0, import_jsx_runtime17.jsx)("svg", __assign20({ height: "1em", preserveAspectRatio: "xMidYMid", viewBox: "0 0 128 128", width: "1em" }, props, { children: (0, import_jsx_runtime17.jsx)("path", { d: "M126.772 51.913c-1.641 6.254-4.848 11.796-9.505 16.528l-41.524 48.612c-3.096 3.585-7.039 5.392-11.765 5.392-4.726 0-8.668-1.807-11.768-5.396L10.66 68.34C6.077 63.754 2.814 58.12 1.266 52.004.418 49 0 45.775 0 42.443 0 32.631 3.808 23.4 10.737 16.472 19.61 7.597 31.993 3.833 44.055 6.293c6.015 1.267 11.383 3.881 16.17 7.883a5.834 5.834 0 0 0 3.753 1.342c1.4 0 2.658-.459 3.674-1.339 9.686-7.953 22.313-10.577 34.105-7.094 5.884 1.828 11.005 4.928 15.463 9.387 9.322 9.322 12.893 22.716 9.552 35.44zm-14.428 12.012c7.721-7.721 10.73-18.85 8.013-29.263-3.259-12.157-13.877-21.773-27.765-22.377-7.712-.374-14.583 1.94-20.726 7.016-.334.223-.49.33-.73.511a11.431 11.431 0 0 1-4.092 1.923c-1.093.273-2.062.412-3.066.412-2.319 0-5.33-1.013-6.809-1.998-.37-.247-.701-.496-1.228-.902-5.627-4.652-11.977-6.96-19.156-6.96a30.137 30.137 0 0 0-21.323 8.825c-5.7 5.776-8.834 13.336-8.834 21.331 0 8.072 3.133 15.63 8.878 21.379l41.75 48.913c1.77 2.055 3.998 3.082 6.722 3.082s4.95-1.026 6.722-3.08l41.644-48.812z", fill: "currentColor" }) }));
}

// node_modules/react-spotify-web-playback/esm/spotify.js
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
function checkTracksStatus(token, tracks) {
  return __awaiter(this, void 0, void 0, function() {
    var ids;
    return __generator(this, function(_a2) {
      ids = Array.isArray(tracks) ? tracks : [tracks];
      return [2, fetch("https://api.spotify.com/v1/me/tracks/contains?ids=".concat(ids), {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "GET"
      }).then(function(d) {
        return d.json();
      })];
    });
  });
}
function getDevices(token) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/devices", {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "GET"
      }).then(function(d) {
        return d.json();
      })];
    });
  });
}
function getPlaybackState(token) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player", {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "GET"
      }).then(function(d) {
        if (d.status === 204) {
          return null;
        }
        return d.json();
      })];
    });
  });
}
function pause(token) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/pause", {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}
function play(token, _a2) {
  var context_uri = _a2.context_uri, deviceId = _a2.deviceId, _b = _a2.offset, offset = _b === void 0 ? 0 : _b, uris = _a2.uris;
  return __awaiter(this, void 0, void 0, function() {
    var body, isArtist, position;
    return __generator(this, function(_c) {
      if (context_uri) {
        isArtist = context_uri.indexOf("artist") >= 0;
        position = void 0;
        if (!isArtist) {
          position = { position: offset };
        }
        body = JSON.stringify({ context_uri, offset: position });
      } else if (Array.isArray(uris) && uris.length) {
        body = JSON.stringify({ uris, offset: { position: offset } });
      }
      return [2, fetch("https://api.spotify.com/v1/me/player/play?device_id=".concat(deviceId), {
        body,
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}
function previous(token) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/previous", {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "POST"
      })];
    });
  });
}
function next(token) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/next", {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "POST"
      })];
    });
  });
}
function removeTracks(token, tracks) {
  return __awaiter(this, void 0, void 0, function() {
    var ids;
    return __generator(this, function(_a2) {
      ids = Array.isArray(tracks) ? tracks : [tracks];
      return [2, fetch("https://api.spotify.com/v1/me/tracks", {
        body: JSON.stringify(ids),
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "DELETE"
      })];
    });
  });
}
function saveTracks(token, tracks) {
  return __awaiter(this, void 0, void 0, function() {
    var ids;
    return __generator(this, function(_a2) {
      ids = Array.isArray(tracks) ? tracks : [tracks];
      return [2, fetch("https://api.spotify.com/v1/me/tracks", {
        body: JSON.stringify({ ids }),
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}
function seek(token, position) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/seek?position_ms=".concat(position), {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}
function setDevice(token, deviceId, shouldPlay) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player", {
        body: JSON.stringify({ device_ids: [deviceId], play: shouldPlay }),
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}
function setVolume(token, volume) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, fetch("https://api.spotify.com/v1/me/player/volume?volume_percent=".concat(volume), {
        headers: {
          Authorization: "Bearer ".concat(token),
          "Content-Type": "application/json"
        },
        method: "PUT"
      })];
    });
  });
}

// node_modules/react-spotify-web-playback/esm/utils.js
var import_exenv = __toESM(require_exenv());
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
var __read2 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var STATUS = {
  ERROR: "ERROR",
  IDLE: "IDLE",
  INITIALIZING: "INITIALIZING",
  READY: "READY",
  RUNNING: "RUNNING",
  UNSUPPORTED: "UNSUPPORTED"
};
var TYPE = {
  DEVICE: "device_update",
  FAVORITE: "favorite_update",
  PLAYER: "player_update",
  PROGRESS: "progress_update",
  STATUS: "status_update",
  TRACK: "track_update"
};
function getLocale(locale) {
  return __assign21({ devices: "Devices", next: "Next", pause: "Pause", play: "Play", previous: "Previous", title: "{name} on SPOTIFY", volume: "Volume" }, locale);
}
function getSpotifyLink(uri) {
  var _a2 = __read2(uri.split(":"), 3), _b = _a2[1], type = _b === void 0 ? "" : _b, _c = _a2[2], id = _c === void 0 ? "" : _c;
  return "https://open.spotify.com/".concat(type, "/").concat(id);
}
function getSpotifyLinkTitle(name, locale) {
  return locale.replace("{name}", name);
}
function getSpotifyURIType(uri) {
  var _a2 = __read2(uri.split(":"), 2), _b = _a2[1], type = _b === void 0 ? "" : _b;
  return type;
}
function isEqualArray(A, B) {
  if (!Array.isArray(A) || !Array.isArray(B) || A.length !== B.length) {
    return false;
  }
  var result = true;
  A.forEach(function(a) {
    return B.forEach(function(b) {
      result = a === b;
    });
  });
  return result;
}
function isNumber2(value) {
  return typeof value === "number";
}
function loadSpotifyPlayer() {
  return new Promise(function(resolve, reject) {
    var scriptTag = document.getElementById("spotify-player");
    if (!scriptTag) {
      var script = document.createElement("script");
      script.id = "spotify-player";
      script.type = "text/javascript";
      script.async = false;
      script.defer = true;
      script.src = "https://sdk.scdn.co/spotify-player.js";
      script.onload = function() {
        return resolve();
      };
      script.onerror = function(error) {
        return reject(new Error("loadScript: ".concat(error.message)));
      };
      document.head.appendChild(script);
    } else {
      resolve();
    }
  });
}
function parseVolume(value) {
  if (!isNumber2(value)) {
    return 1;
  }
  if (value > 1) {
    return value / 100;
  }
  return value;
}
function round2(number, digits) {
  if (digits === void 0) {
    digits = 2;
  }
  var factor = Math.pow(10, digits);
  return Math.round(number * factor) / factor;
}
function validateURI(input) {
  var validTypes = ["album", "artist", "playlist", "show", "track"];
  if (input && input.indexOf(":") > -1) {
    var _a2 = __read2(input.split(":"), 3), key = _a2[0], type = _a2[1], id = _a2[2];
    if (key === "spotify" && validTypes.indexOf(type) >= 0 && id.length === 22) {
      return true;
    }
  }
  return false;
}

// node_modules/react-spotify-web-playback/esm/components/Info.js
var __extends5 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator2 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __read3 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var Wrapper7 = styled("div")({
  alignItems: "center",
  display: "flex",
  textAlign: "left",
  a: {
    display: "inline-flex",
    textDecoration: "none"
  },
  "@media (max-width: 1023px)": {
    borderBottom: "1px solid #ccc",
    display: "none",
    width: "100%"
  },
  "&.rswp__active": {
    "@media (max-width: 1023px)": {
      display: "flex"
    }
  }
}, function(_a2) {
  var style = _a2.style;
  return {
    height: px(style.h),
    img: {
      height: px(style.h),
      width: px(style.h)
    }
  };
}, "InfoRSWP");
var Title = styled("div")({
  paddingLeft: px(10),
  whiteSpace: "nowrap",
  p: {
    fontSize: px(14),
    lineHeight: 1.3,
    paddingRight: px(5),
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    width: "100%",
    "&:first-child": {
      alignItems: "center",
      display: "inline-flex"
    }
  },
  span: {
    display: "inline-block",
    overflow: "hidden",
    textOverflow: "ellipsis"
  },
  button: {
    fontSize: "110%",
    marginLeft: px(5)
  }
}, function(_a2) {
  var style = _a2.style;
  return {
    width: "calc(100% - ".concat(px(style.h), ")"),
    p: {
      a: {
        color: style.trackNameColor
      },
      "&:last-child": {
        a: {
          color: style.trackArtistColor
        }
      }
    },
    button: {
      color: style.c,
      "&.rswp__active": {
        color: style.activeColor
      }
    }
  };
});
var Info = function(_super) {
  __extends5(Info2, _super);
  function Info2(props) {
    var _this = _super.call(this, props) || this;
    Object.defineProperty(_this, "isActive", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "handleClickIcon", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter2(_this, void 0, void 0, function() {
          var isSaved, _a2, onFavoriteStatusChange, token, track;
          return __generator2(this, function(_b) {
            switch (_b.label) {
              case 0:
                isSaved = this.state.isSaved;
                _a2 = this.props, onFavoriteStatusChange = _a2.onFavoriteStatusChange, token = _a2.token, track = _a2.track;
                if (!isSaved)
                  return [3, 2];
                return [4, removeTracks(token, track.id)];
              case 1:
                _b.sent();
                this.updateState({ isSaved: false });
                return [3, 4];
              case 2:
                return [4, saveTracks(token, track.id)];
              case 3:
                _b.sent();
                this.updateState({ isSaved: true });
                _b.label = 4;
              case 4:
                onFavoriteStatusChange(!isSaved);
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "setStatus", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter2(_this, void 0, void 0, function() {
          var _a2, onFavoriteStatusChange, token, track, updateSavedStatus, status, _b, isSaved;
          var _this2 = this;
          return __generator2(this, function(_c) {
            switch (_c.label) {
              case 0:
                if (!this.isActive) {
                  return [2];
                }
                _a2 = this.props, onFavoriteStatusChange = _a2.onFavoriteStatusChange, token = _a2.token, track = _a2.track, updateSavedStatus = _a2.updateSavedStatus;
                if (updateSavedStatus && track.id) {
                  updateSavedStatus(function(newStatus) {
                    _this2.updateState({ isSaved: newStatus });
                  });
                }
                return [4, checkTracksStatus(token, track.id)];
              case 1:
                status = _c.sent();
                _b = __read3(status || [false], 1), isSaved = _b[0];
                this.updateState({ isSaved });
                onFavoriteStatusChange(isSaved);
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "updateState", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(state) {
        if (state === void 0) {
          state = {};
        }
        if (!_this.isActive) {
          return;
        }
        _this.setState(state);
      }
    });
    _this.state = {
      isSaved: false
    };
    return _this;
  }
  Object.defineProperty(Info2.prototype, "componentDidMount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return __awaiter2(this, void 0, void 0, function() {
        var _a2, showSaveIcon, track;
        return __generator2(this, function(_b) {
          switch (_b.label) {
            case 0:
              this.isActive = true;
              _a2 = this.props, showSaveIcon = _a2.showSaveIcon, track = _a2.track;
              if (!(showSaveIcon && track.id))
                return [3, 2];
              return [4, this.setStatus()];
            case 1:
              _b.sent();
              _b.label = 2;
            case 2:
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(Info2.prototype, "componentDidUpdate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(previousProps) {
      return __awaiter2(this, void 0, void 0, function() {
        var _a2, showSaveIcon, track;
        return __generator2(this, function(_b) {
          switch (_b.label) {
            case 0:
              _a2 = this.props, showSaveIcon = _a2.showSaveIcon, track = _a2.track;
              if (!(showSaveIcon && previousProps.track.id !== track.id && track.id))
                return [3, 2];
              this.updateState({ isSaved: false });
              return [4, this.setStatus()];
            case 1:
              _b.sent();
              _b.label = 2;
            case 2:
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(Info2.prototype, "componentWillUnmount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.isActive = false;
    }
  });
  Object.defineProperty(Info2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var isSaved = this.state.isSaved;
      var _a2 = this.props, isActive = _a2.isActive, locale = _a2.locale, showSaveIcon = _a2.showSaveIcon, _b = _a2.styles, activeColor = _b.activeColor, color = _b.color, height = _b.height, trackArtistColor = _b.trackArtistColor, trackNameColor = _b.trackNameColor, _c = _a2.track, id = _c.id, name = _c.name, uri = _c.uri, image = _c.image, _d = _c.artists, artists = _d === void 0 ? [] : _d;
      var title = getSpotifyLinkTitle(name, locale.title);
      var icon;
      if (showSaveIcon && id) {
        icon = (0, import_jsx_runtime18.jsx)("button", __assign22({ className: isSaved ? "rswp__active" : void 0, onClick: this.handleClickIcon, type: "button" }, { children: isSaved ? (0, import_jsx_runtime18.jsx)(Favorite, {}) : (0, import_jsx_runtime18.jsx)(FavoriteOutline, {}) }));
      }
      var classes = [];
      if (isActive) {
        classes.push("rswp__active");
      }
      return (0, import_jsx_runtime18.jsxs)(Wrapper7, __assign22({ className: classes.join(" "), style: { h: height } }, { children: [image && (0, import_jsx_runtime18.jsx)("a", __assign22({ "aria-label": title, href: getSpotifyLink(uri), rel: "noreferrer", target: "_blank", title }, { children: (0, import_jsx_runtime18.jsx)("img", { alt: name, src: image }) })), !!name && (0, import_jsx_runtime18.jsxs)(Title, __assign22({ style: { c: color, h: height, activeColor, trackArtistColor, trackNameColor } }, { children: [(0, import_jsx_runtime18.jsxs)("p", { children: [(0, import_jsx_runtime18.jsx)("span", { children: (0, import_jsx_runtime18.jsx)("a", __assign22({ "aria-label": title, href: getSpotifyLink(uri), rel: "noreferrer", target: "_blank", title }, { children: name })) }), icon] }), (0, import_jsx_runtime18.jsx)("p", __assign22({ title: artists.map(function(d) {
        return d.name;
      }).join(", ") }, { children: artists.map(function(artist, index) {
        var artistTitle = getSpotifyLinkTitle(artist.name, locale.title);
        return (0, import_jsx_runtime18.jsxs)("span", { children: [index ? ", " : "", (0, import_jsx_runtime18.jsx)("a", __assign22({ "aria-label": artistTitle, href: getSpotifyLink(artist.uri), rel: "noreferrer", target: "_blank", title: artistTitle }, { children: artist.name }))] }, artist.uri);
      }) }))] }))] }));
    }
  });
  return Info2;
}(React6.PureComponent);
var Info_default = Info;

// node_modules/react-spotify-web-playback/esm/components/Loader.js
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
var Wrapper8 = styled("div")({
  margin: "0 auto",
  position: "relative",
  "> div": {
    borderRadius: "50%",
    borderStyle: "solid",
    borderWidth: 0,
    boxSizing: "border-box",
    height: 0,
    left: "50%",
    position: "absolute",
    top: "50%",
    transform: "translate(-50%, -50%)",
    width: 0
  }
}, function(_a2) {
  var style = _a2.style;
  var pulse = keyframes({
    "0%": {
      height: 0,
      width: 0
    },
    "30%": {
      borderWidth: px(8),
      height: px(style.loaderSize),
      opacity: 1,
      width: px(style.loaderSize)
    },
    "100%": {
      borderWidth: 0,
      height: px(style.loaderSize),
      opacity: 0,
      width: px(style.loaderSize)
    }
  });
  return {
    height: px(style.loaderSize),
    width: px(style.loaderSize),
    "> div": {
      animation: "".concat(pulse, " 1.15s infinite cubic-bezier(0.215, 0.61, 0.355, 1)"),
      borderColor: style.loaderColor
    }
  };
}, "LoaderRSWP");
function Loader(_a2) {
  var _b = _a2.styles, loaderColor = _b.loaderColor, loaderSize = _b.loaderSize;
  return (0, import_jsx_runtime19.jsx)(Wrapper8, __assign23({ style: { loaderColor, loaderSize } }, { children: (0, import_jsx_runtime19.jsx)("div", {}) }));
}

// node_modules/react-spotify-web-playback/esm/components/Player.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var React7 = __toESM(require_react());
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
put(".PlayerRSWP", {
  boxSizing: "border-box",
  fontSize: "inherit",
  width: "100%",
  "*": {
    boxSizing: "border-box"
  },
  button: {
    appearance: "none",
    backgroundColor: "transparent",
    border: 0,
    borderRadius: 0,
    color: "inherit",
    cursor: "pointer",
    display: "inline-flex",
    lineHeight: 1,
    padding: 0,
    ":focus": {
      outlineColor: "#000",
      outlineOffset: 3
    }
  },
  p: {
    margin: 0
  }
});
var Player = React7.forwardRef(function(_a2, ref) {
  var children = _a2.children, _b = _a2.styles, bgColor = _b.bgColor, height = _b.height;
  return (0, import_jsx_runtime20.jsx)("div", __assign24({ ref, className: "PlayerRSWP", style: { backgroundColor: bgColor, minHeight: px(height) } }, { children }));
});
var Player_default = Player;

// node_modules/react-spotify-web-playback/esm/components/Slider.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var React8 = __toESM(require_react());
var __extends6 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
var __awaiter3 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator3 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var Wrapper9 = styled("div")({
  display: "flex",
  position: "relative",
  transition: "height 0.3s",
  zIndex: 10
}, function(_a2) {
  var style = _a2.style;
  return {
    height: px(style.sliderHeight)
  };
}, "SliderRSWP");
var Slider = function(_super) {
  __extends6(Slider2, _super);
  function Slider2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    Object.defineProperty(_this, "handleChangeRange", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(_a2) {
        var x = _a2.x;
        return __awaiter3(_this, void 0, void 0, function() {
          var onChangeRange;
          return __generator3(this, function(_b) {
            onChangeRange = this.props.onChangeRange;
            onChangeRange(x);
            return [2];
          });
        });
      }
    });
    return _this;
  }
  Object.defineProperty(Slider2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _a2 = this.props, isMagnified = _a2.isMagnified, onToggleMagnify = _a2.onToggleMagnify, position = _a2.position, styles = _a2.styles;
      var handleSize = styles.sliderHeight + 6;
      return (0, import_jsx_runtime21.jsx)(Wrapper9, __assign25({ onMouseEnter: onToggleMagnify, onMouseLeave: onToggleMagnify, style: { sliderHeight: isMagnified ? styles.sliderHeight + 4 : styles.sliderHeight } }, { children: (0, import_jsx_runtime21.jsx)(esm_default, { axis: "x", onChange: this.handleChangeRange, styles: {
        options: {
          thumbBorder: 0,
          thumbBorderRadius: styles.sliderHandleBorderRadius,
          thumbColor: styles.sliderHandleColor,
          thumbSize: isMagnified ? handleSize + 4 : handleSize,
          height: isMagnified ? styles.sliderHeight + 4 : styles.sliderHeight,
          padding: 0,
          rangeColor: styles.sliderColor,
          trackBorderRadius: styles.sliderTrackBorderRadius,
          trackColor: styles.sliderTrackColor
        }
      }, x: position, xMax: 100, xMin: 0, xStep: 0.1 }) }));
    }
  });
  return Slider2;
}(React8.PureComponent);
var Slider_default = Slider;

// node_modules/react-spotify-web-playback/esm/index.js
var __extends7 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
var __awaiter4 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator4 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __read4 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var SpotifyWebPlayer = function(_super) {
  __extends7(SpotifyWebPlayer2, _super);
  function SpotifyWebPlayer2(props) {
    var _this = _super.call(this, props) || this;
    Object.defineProperty(_this, "isActive", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "emptyTrack", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: {
        artists: [],
        durationMs: 0,
        id: "",
        image: "",
        name: "",
        uri: ""
      }
    });
    Object.defineProperty(_this, "getPlayOptions", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: memoizeOne(function(data) {
        var playOptions = {
          context_uri: void 0,
          uris: void 0
        };
        if (data) {
          var ids = Array.isArray(data) ? data : [data];
          if (!ids.every(function(d) {
            return validateURI(d);
          })) {
            console.error("Invalid URI");
            return playOptions;
          }
          if (ids.some(function(d) {
            return getSpotifyURIType(d) === "track";
          })) {
            if (!ids.every(function(d) {
              return getSpotifyURIType(d) === "track";
            })) {
              console.warn("You can't mix tracks URIs with other types");
            }
            playOptions.uris = ids.filter(function(d) {
              return validateURI(d) && getSpotifyURIType(d) === "track";
            });
          } else {
            if (ids.length > 1) {
              console.warn("Albums, Artists, Playlists and Podcasts can't have multiple URIs");
            }
            playOptions.context_uri = ids[0];
          }
        }
        return playOptions;
      })
    });
    Object.defineProperty(_this, "hasNewToken", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "player", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "playerProgressInterval", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "playerSyncInterval", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "ref", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: React9.createRef()
    });
    Object.defineProperty(_this, "seekUpdateInterval", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 100
    });
    Object.defineProperty(_this, "styles", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "syncTimeout", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "handleChangeRange", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(position) {
        return __awaiter4(_this, void 0, void 0, function() {
          var track, _a2, callback, token, progress, percentage, state, error_1;
          return __generator4(this, function(_b) {
            switch (_b.label) {
              case 0:
                track = this.state.track;
                _a2 = this.props, callback = _a2.callback, token = _a2.token;
                progress = 0;
                _b.label = 1;
              case 1:
                _b.trys.push([1, 8, , 9]);
                percentage = position / 100;
                if (!this.isExternalPlayer)
                  return [3, 3];
                progress = Math.round(track.durationMs * percentage);
                return [4, seek(token, progress)];
              case 2:
                _b.sent();
                this.updateState({
                  position,
                  progressMs: progress
                });
                return [3, 7];
              case 3:
                if (!this.player)
                  return [3, 7];
                return [4, this.player.getCurrentState()];
              case 4:
                state = _b.sent();
                if (!state)
                  return [3, 6];
                progress = Math.round(state.track_window.current_track.duration_ms * percentage);
                return [4, this.player.seek(progress)];
              case 5:
                _b.sent();
                this.updateState({
                  position,
                  progressMs: progress
                });
                return [3, 7];
              case 6:
                this.updateState({ position: 0 });
                _b.label = 7;
              case 7:
                if (callback) {
                  callback(__assign26(__assign26({}, this.state), { type: TYPE.PROGRESS }));
                }
                return [3, 9];
              case 8:
                error_1 = _b.sent();
                console.error(error_1);
                return [3, 9];
              case 9:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleClickTogglePlay", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var isActive, error_2;
          return __generator4(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                isActive = this.state.isActive;
                _a2.label = 1;
              case 1:
                _a2.trys.push([1, 3, , 4]);
                return [4, this.togglePlay(!this.isExternalPlayer && !isActive)];
              case 2:
                _a2.sent();
                return [3, 4];
              case 3:
                error_2 = _a2.sent();
                console.error(error_2);
                return [3, 4];
              case 4:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleClickPrevious", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var token, error_3;
          var _this2 = this;
          return __generator4(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                _a2.trys.push([0, 5, , 6]);
                if (!this.isExternalPlayer)
                  return [3, 2];
                token = this.props.token;
                return [4, previous(token)];
              case 1:
                _a2.sent();
                this.syncTimeout = window.setTimeout(function() {
                  _this2.syncDevice();
                }, 300);
                return [3, 4];
              case 2:
                if (!this.player)
                  return [3, 4];
                return [4, this.player.previousTrack()];
              case 3:
                _a2.sent();
                _a2.label = 4;
              case 4:
                return [3, 6];
              case 5:
                error_3 = _a2.sent();
                console.error(error_3);
                return [3, 6];
              case 6:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleClickNext", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var token, error_4;
          var _this2 = this;
          return __generator4(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                _a2.trys.push([0, 5, , 6]);
                if (!this.isExternalPlayer)
                  return [3, 2];
                token = this.props.token;
                return [4, next(token)];
              case 1:
                _a2.sent();
                this.syncTimeout = window.setTimeout(function() {
                  _this2.syncDevice();
                }, 300);
                return [3, 4];
              case 2:
                if (!this.player)
                  return [3, 4];
                return [4, this.player.nextTrack()];
              case 3:
                _a2.sent();
                _a2.label = 4;
              case 4:
                return [3, 6];
              case 5:
                error_4 = _a2.sent();
                console.error(error_4);
                return [3, 6];
              case 6:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleClickDevice", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(deviceId) {
        return __awaiter4(_this, void 0, void 0, function() {
          var isUnsupported, _a2, autoPlay, persistDeviceSelection, token, player, error_5;
          return __generator4(this, function(_b) {
            switch (_b.label) {
              case 0:
                isUnsupported = this.state.isUnsupported;
                _a2 = this.props, autoPlay = _a2.autoPlay, persistDeviceSelection = _a2.persistDeviceSelection, token = _a2.token;
                this.updateState({ currentDeviceId: deviceId });
                _b.label = 1;
              case 1:
                _b.trys.push([1, 7, , 8]);
                return [4, setDevice(token, deviceId)];
              case 2:
                _b.sent();
                if (persistDeviceSelection) {
                  sessionStorage.setItem("rswpDeviceId", deviceId);
                }
                if (!isUnsupported)
                  return [3, 6];
                return [4, this.syncDevice()];
              case 3:
                _b.sent();
                return [4, getPlaybackState(token)];
              case 4:
                player = _b.sent();
                if (!(player && !player.is_playing && autoPlay))
                  return [3, 6];
                return [4, this.togglePlay(true)];
              case 5:
                _b.sent();
                _b.label = 6;
              case 6:
                return [3, 8];
              case 7:
                error_5 = _b.sent();
                console.error(error_5);
                return [3, 8];
              case 8:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleFavoriteStatusChange", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(status) {
        var isSaved = _this.state.isSaved;
        _this.updateState({ isSaved: status });
        if (isSaved !== status) {
          _this.handleCallback(__assign26(__assign26({}, _this.state), { isSaved: status, type: TYPE.FAVORITE }));
        }
      }
    });
    Object.defineProperty(_this, "handlePlayerErrors", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(type, message) {
        return __awaiter4(_this, void 0, void 0, function() {
          var status, isPlaybackError, isInitializationError, nextStatus, devices, token;
          var _a2;
          return __generator4(this, function(_b) {
            switch (_b.label) {
              case 0:
                status = this.state.status;
                isPlaybackError = type === "playback_error";
                isInitializationError = type === "initialization_error";
                nextStatus = status;
                devices = [];
                if (!(this.player && !isPlaybackError))
                  return [3, 2];
                return [4, this.player.disconnect()];
              case 1:
                _b.sent();
                _b.label = 2;
              case 2:
                if (!isInitializationError)
                  return [3, 4];
                nextStatus = STATUS.UNSUPPORTED;
                token = this.props.token;
                return [4, getDevices(token)];
              case 3:
                _a2 = _b.sent().devices, devices = _a2 === void 0 ? [] : _a2;
                _b.label = 4;
              case 4:
                if (!isInitializationError && !isPlaybackError) {
                  nextStatus = STATUS.ERROR;
                }
                this.updateState({
                  devices,
                  error: message,
                  errorType: type,
                  isInitializing: false,
                  isUnsupported: isInitializationError,
                  status: nextStatus
                });
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handlePlayerStateChanges", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(state) {
        return __awaiter4(_this, void 0, void 0, function() {
          var paused, position, _a2, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;
          return __generator4(this, function(_c) {
            switch (_c.label) {
              case 0:
                _c.trys.push([0, 6, , 7]);
                if (!state)
                  return [3, 2];
                paused = state.paused, position = state.position, _a2 = state.track_window, _b = _a2.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a2.next_tracks, previous_tracks = _a2.previous_tracks;
                isPlaying = !paused;
                return [4, this.player.getVolume()];
              case 1:
                volume = _c.sent();
                track = {
                  artists,
                  durationMs: duration_ms,
                  id,
                  image: this.setAlbumImage(album),
                  name: name_1,
                  uri
                };
                trackState = void 0;
                if (position === 0) {
                  trackState = {
                    nextTracks: next_tracks,
                    position: 0,
                    previousTracks: previous_tracks,
                    track
                  };
                }
                this.updateState(__assign26({ error: "", errorType: "", isActive: true, isPlaying, progressMs: position, volume: round2(volume) }, trackState));
                return [3, 5];
              case 2:
                if (!this.isExternalPlayer)
                  return [3, 4];
                return [4, this.syncDevice()];
              case 3:
                _c.sent();
                return [3, 5];
              case 4:
                this.updateState({
                  isActive: false,
                  isPlaying: false,
                  nextTracks: [],
                  position: 0,
                  previousTracks: [],
                  track: {
                    artists: "",
                    durationMs: 0,
                    id: "",
                    image: "",
                    name: "",
                    uri: ""
                  }
                });
                _c.label = 5;
              case 5:
                return [3, 7];
              case 6:
                error_6 = _c.sent();
                console.error(error_6);
                return [3, 7];
              case 7:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handlePlayerStatus", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(_a2) {
        var device_id = _a2.device_id;
        return __awaiter4(_this, void 0, void 0, function() {
          var _b, currentDeviceId, devices;
          return __generator4(this, function(_c) {
            switch (_c.label) {
              case 0:
                return [4, this.initializeDevices(device_id)];
              case 1:
                _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;
                this.updateState({
                  currentDeviceId,
                  deviceId: device_id,
                  devices,
                  isInitializing: false,
                  status: device_id ? STATUS.READY : STATUS.IDLE
                });
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "handleToggleMagnify", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        var magnifySliderOnHover = _this.props.magnifySliderOnHover;
        if (magnifySliderOnHover) {
          _this.updateState(function(previousState) {
            return { isMagnified: !previousState.isMagnified };
          });
        }
      }
    });
    Object.defineProperty(_this, "initializePlayer", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        var volume = _this.state.volume;
        var _a2 = _this.props, _b = _a2.name, name = _b === void 0 ? "Spotify Web Player" : _b, token = _a2.token;
        if (!window.Spotify) {
          return;
        }
        _this.updateState({ isInitializing: true });
        _this.player = new window.Spotify.Player({
          getOAuthToken: function(callback) {
            callback(token);
          },
          name,
          volume
        });
        _this.player.addListener("ready", _this.handlePlayerStatus);
        _this.player.addListener("not_ready", _this.handlePlayerStatus);
        _this.player.addListener("player_state_changed", _this.handlePlayerStateChanges);
        _this.player.addListener("initialization_error", function(error) {
          return _this.handlePlayerErrors("initialization_error", error.message);
        });
        _this.player.addListener("authentication_error", function(error) {
          return _this.handlePlayerErrors("authentication_error", error.message);
        });
        _this.player.addListener("account_error", function(error) {
          return _this.handlePlayerErrors("account_error", error.message);
        });
        _this.player.addListener("playback_error", function(error) {
          return _this.handlePlayerErrors("playback_error", error.message);
        });
        _this.player.connect();
      }
    });
    Object.defineProperty(_this, "setAlbumImage", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(album) {
        var width = Math.min.apply(Math, __spreadArray2([], __read4(album.images.map(function(d) {
          return d.width || 0;
        })), false));
        var thumb = album.images.find(function(d) {
          return d.width === width;
        }) || {};
        return thumb.url;
      }
    });
    Object.defineProperty(_this, "setExternalDevice", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(id) {
        _this.updateState({ currentDeviceId: id, isPlaying: true });
      }
    });
    Object.defineProperty(_this, "setVolume", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(volume) {
        return __awaiter4(_this, void 0, void 0, function() {
          var token;
          return __generator4(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                token = this.props.token;
                if (!this.isExternalPlayer)
                  return [3, 3];
                return [4, setVolume(token, Math.round(volume * 100))];
              case 1:
                _a2.sent();
                return [4, this.syncDevice()];
              case 2:
                _a2.sent();
                return [3, 5];
              case 3:
                if (!this.player)
                  return [3, 5];
                return [4, this.player.setVolume(volume)];
              case 4:
                _a2.sent();
                _a2.label = 5;
              case 5:
                this.updateState({ volume });
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "syncDevice", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var deviceId, token, player, track, error_7, state;
          return __generator4(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                if (!this.isActive) {
                  return [2];
                }
                deviceId = this.state.deviceId;
                token = this.props.token;
                _a2.label = 1;
              case 1:
                _a2.trys.push([1, 3, , 4]);
                return [4, getPlaybackState(token)];
              case 2:
                player = _a2.sent();
                track = this.emptyTrack;
                if (!player) {
                  throw new Error("No player");
                }
                if (player.item) {
                  track = {
                    artists: player.item.artists,
                    durationMs: player.item.duration_ms,
                    id: player.item.id,
                    image: this.setAlbumImage(player.item.album),
                    name: player.item.name,
                    uri: player.item.uri
                  };
                }
                this.updateState({
                  error: "",
                  errorType: "",
                  isActive: true,
                  isPlaying: player.is_playing,
                  nextTracks: [],
                  previousTracks: [],
                  progressMs: player.item ? player.progress_ms : 0,
                  status: STATUS.READY,
                  track,
                  volume: parseVolume(player.device.volume_percent)
                });
                return [3, 4];
              case 3:
                error_7 = _a2.sent();
                state = {
                  isActive: false,
                  isPlaying: false,
                  position: 0,
                  track: this.emptyTrack
                };
                if (deviceId) {
                  this.updateState(__assign26({ currentDeviceId: deviceId }, state));
                  return [2];
                }
                this.updateState(__assign26({ error: error_7.message, errorType: "player_status", status: STATUS.ERROR }, state));
                return [3, 4];
              case 4:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "toggleOffset", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var _a2, currentDeviceId, isPlaying, _b, offset, token, uris;
          return __generator4(this, function(_c) {
            switch (_c.label) {
              case 0:
                _a2 = this.state, currentDeviceId = _a2.currentDeviceId, isPlaying = _a2.isPlaying;
                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;
                if (!(isPlaying && typeof offset === "number" && Array.isArray(uris)))
                  return [3, 2];
                return [4, play(token, { deviceId: currentDeviceId, offset, uris })];
              case 1:
                _c.sent();
                _c.label = 2;
              case 2:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "togglePlay", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(init) {
        if (init === void 0) {
          init = false;
        }
        return __awaiter4(_this, void 0, void 0, function() {
          var _a2, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;
          var _this2 = this;
          return __generator4(this, function(_c) {
            switch (_c.label) {
              case 0:
                _a2 = this.state, currentDeviceId = _a2.currentDeviceId, isPlaying = _a2.isPlaying, needsUpdate = _a2.needsUpdate;
                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;
                shouldInitialize = init || needsUpdate;
                playOptions = this.getPlayOptions(uris);
                _c.label = 1;
              case 1:
                _c.trys.push([1, 13, , 14]);
                if (!this.isExternalPlayer)
                  return [3, 6];
                if (!!isPlaying)
                  return [3, 3];
                return [4, play(token, __assign26({ deviceId: currentDeviceId, offset }, shouldInitialize ? playOptions : void 0))];
              case 2:
                _c.sent();
                return [3, 5];
              case 3:
                return [4, pause(token)];
              case 4:
                _c.sent();
                this.updateState({ isPlaying: false });
                _c.label = 5;
              case 5:
                this.syncTimeout = window.setTimeout(function() {
                  _this2.syncDevice();
                }, 300);
                return [3, 12];
              case 6:
                if (!this.player)
                  return [3, 12];
                return [4, this.player.getCurrentState()];
              case 7:
                playerState = _c.sent();
                return [4, this.player.activateElement()];
              case 8:
                _c.sent();
                if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused))
                  return [3, 10];
                return [4, play(token, __assign26({ deviceId: currentDeviceId, offset }, shouldInitialize ? playOptions : void 0))];
              case 9:
                _c.sent();
                return [3, 12];
              case 10:
                return [4, this.player.togglePlay()];
              case 11:
                _c.sent();
                _c.label = 12;
              case 12:
                if (needsUpdate) {
                  this.updateState({ needsUpdate: false });
                }
                return [3, 14];
              case 13:
                error_8 = _c.sent();
                console.error(error_8);
                return [3, 14];
              case 14:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "updateSeekBar", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var _a2, progressMs, track, position, state, progress, position, error_9;
          return __generator4(this, function(_b) {
            switch (_b.label) {
              case 0:
                if (!this.isActive) {
                  return [2];
                }
                _a2 = this.state, progressMs = _a2.progressMs, track = _a2.track;
                _b.label = 1;
              case 1:
                _b.trys.push([1, 5, , 6]);
                if (!this.isExternalPlayer)
                  return [3, 2];
                position = progressMs / track.durationMs;
                position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));
                this.updateState({
                  position,
                  progressMs: progressMs + this.seekUpdateInterval
                });
                return [3, 4];
              case 2:
                if (!this.player)
                  return [3, 4];
                return [4, this.player.getCurrentState()];
              case 3:
                state = _b.sent();
                if (state) {
                  progress = state.position;
                  position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));
                  this.updateState({
                    position,
                    progressMs: progress + this.seekUpdateInterval
                  });
                }
                _b.label = 4;
              case 4:
                return [3, 6];
              case 5:
                error_9 = _b.sent();
                console.error(error_9);
                return [3, 6];
              case 6:
                return [2];
            }
          });
        });
      }
    });
    Object.defineProperty(_this, "updateState", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(state) {
        if (state === void 0) {
          state = {};
        }
        if (!_this.isActive) {
          return;
        }
        _this.setState(state);
      }
    });
    _this.state = {
      currentDeviceId: "",
      deviceId: "",
      devices: [],
      error: "",
      errorType: "",
      isActive: false,
      isInitializing: false,
      isMagnified: false,
      isPlaying: false,
      isSaved: false,
      isUnsupported: false,
      needsUpdate: false,
      nextTracks: [],
      playerPosition: "bottom",
      position: 0,
      previousTracks: [],
      progressMs: 0,
      status: STATUS.IDLE,
      track: _this.emptyTrack,
      volume: parseVolume(props.initialVolume) || 1
    };
    _this.styles = getMergedStyles(props.styles);
    return _this;
  }
  Object.defineProperty(SpotifyWebPlayer2.prototype, "componentDidMount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _a2;
      return __awaiter4(this, void 0, void 0, function() {
        var _b, top;
        return __generator4(this, function(_c) {
          switch (_c.label) {
            case 0:
              this.isActive = true;
              _b = (((_a2 = this.ref.current) === null || _a2 === void 0 ? void 0 : _a2.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;
              this.updateState({
                playerPosition: top > window.innerHeight / 2 ? "bottom" : "top",
                status: STATUS.INITIALIZING
              });
              if (!window.onSpotifyWebPlaybackSDKReady) {
                window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;
              } else {
                this.initializePlayer();
              }
              return [4, loadSpotifyPlayer()];
            case 1:
              _c.sent();
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "componentDidUpdate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(previousProps, previousState) {
      return __awaiter4(this, void 0, void 0, function() {
        var _a2, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;
        var _this = this;
        return __generator4(this, function(_c) {
          switch (_c.label) {
            case 0:
              _a2 = this.state, currentDeviceId = _a2.currentDeviceId, deviceId = _a2.deviceId, error = _a2.error, isInitializing = _a2.isInitializing, isPlaying = _a2.isPlaying, status = _a2.status, track = _a2.track;
              _b = this.props, autoPlay = _b.autoPlay, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;
              isReady = previousState.status !== STATUS.READY && status === STATUS.READY;
              changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;
              playOptions = this.getPlayOptions(uris);
              canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);
              shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));
              if (!(canPlay && shouldPlay))
                return [3, 2];
              return [4, play(token, __assign26({ deviceId: currentDeviceId, offset }, playOptions))];
            case 1:
              _c.sent();
              if (!isPlaying) {
                this.updateState({ isPlaying: true });
              }
              if (this.isExternalPlayer) {
                this.syncTimeout = window.setTimeout(function() {
                  _this.syncDevice();
                }, 600);
              }
              return [3, 3];
            case 2:
              if (changedURIs && !isPlaying) {
                this.updateState({ needsUpdate: true });
              }
              _c.label = 3;
            case 3:
              if (previousState.status !== status) {
                this.handleCallback(__assign26(__assign26({}, this.state), { type: TYPE.STATUS }));
              }
              if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId))
                return [3, 6];
              if (!isReady) {
                this.handleCallback(__assign26(__assign26({}, this.state), { type: TYPE.DEVICE }));
              }
              return [4, this.toggleSyncInterval(this.isExternalPlayer)];
            case 4:
              _c.sent();
              return [4, this.updateSeekBar()];
            case 5:
              _c.sent();
              _c.label = 6;
            case 6:
              if (previousState.track.id !== track.id && track.id) {
                this.handleCallback(__assign26(__assign26({}, this.state), { type: TYPE.TRACK }));
                if (showSaveIcon) {
                  this.updateState({ isSaved: false });
                }
              }
              if (!(previousState.isPlaying !== isPlaying))
                return [3, 8];
              this.toggleProgressBar();
              return [4, this.toggleSyncInterval(this.isExternalPlayer)];
            case 7:
              _c.sent();
              this.handleCallback(__assign26(__assign26({}, this.state), { type: TYPE.PLAYER }));
              _c.label = 8;
            case 8:
              if (token && previousProps.token !== token) {
                this.hasNewToken = true;
                if (!isInitializing) {
                  this.initializePlayer();
                } else {
                  this.hasNewToken = true;
                }
              }
              if (!(previousProps.play !== playProp && playProp !== isPlaying))
                return [3, 10];
              return [4, this.togglePlay(!track.id)];
            case 9:
              _c.sent();
              _c.label = 10;
            case 10:
              if (!(previousProps.offset !== offset))
                return [3, 12];
              return [4, this.toggleOffset()];
            case 11:
              _c.sent();
              _c.label = 12;
            case 12:
              if (!(previousState.isInitializing && !isInitializing))
                return [3, 14];
              if (error === "authentication_error" && this.hasNewToken) {
                this.hasNewToken = false;
                this.initializePlayer();
              }
              if (!(syncExternalDevice && !uris))
                return [3, 14];
              return [4, getPlaybackState(token)];
            case 13:
              player = _c.sent();
              if (player && player.is_playing && player.device.id !== deviceId) {
                this.setExternalDevice(player.device.id);
              }
              _c.label = 14;
            case 14:
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "componentWillUnmount", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return __awaiter4(this, void 0, void 0, function() {
        return __generator4(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              this.isActive = false;
              if (!this.player)
                return [3, 2];
              return [4, this.player.disconnect()];
            case 1:
              _a2.sent();
              _a2.label = 2;
            case 2:
              clearInterval(this.playerSyncInterval);
              clearInterval(this.playerProgressInterval);
              clearTimeout(this.syncTimeout);
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "isExternalPlayer", {
    get: function() {
      var _a2 = this.state, currentDeviceId = _a2.currentDeviceId, deviceId = _a2.deviceId, status = _a2.status;
      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "handleCallback", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(state) {
      var callback = this.props.callback;
      if (callback) {
        callback(state);
      }
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "initializeDevices", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(id) {
      return __awaiter4(this, void 0, void 0, function() {
        var _a2, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;
        return __generator4(this, function(_b) {
          switch (_b.label) {
            case 0:
              _a2 = this.props, persistDeviceSelection = _a2.persistDeviceSelection, token = _a2.token;
              return [4, getDevices(token)];
            case 1:
              devices = _b.sent().devices;
              currentDeviceId = id;
              if (persistDeviceSelection) {
                savedDeviceId_1 = sessionStorage.getItem("rswpDeviceId");
                if (!savedDeviceId_1 || !devices.some(function(d) {
                  return d.id === savedDeviceId_1;
                })) {
                  sessionStorage.setItem("rswpDeviceId", currentDeviceId);
                } else {
                  currentDeviceId = savedDeviceId_1;
                }
              }
              return [2, { currentDeviceId, devices }];
          }
        });
      });
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "toggleSyncInterval", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(shouldSync) {
      return __awaiter4(this, void 0, void 0, function() {
        var syncExternalDeviceInterval, error_10;
        return __generator4(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;
              _a2.label = 1;
            case 1:
              _a2.trys.push([1, 4, , 5]);
              if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval))
                return [3, 3];
              return [4, this.syncDevice()];
            case 2:
              _a2.sent();
              clearInterval(this.playerSyncInterval);
              this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1e3);
              _a2.label = 3;
            case 3:
              if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {
                clearInterval(this.playerSyncInterval);
                this.playerSyncInterval = void 0;
              }
              return [3, 5];
            case 4:
              error_10 = _a2.sent();
              console.error(error_10);
              return [3, 5];
            case 5:
              return [2];
          }
        });
      });
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "toggleProgressBar", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var isPlaying = this.state.isPlaying;
      if (isPlaying) {
        if (!this.playerProgressInterval) {
          this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);
        }
      } else if (this.playerProgressInterval) {
        clearInterval(this.playerProgressInterval);
        this.playerProgressInterval = void 0;
      }
    }
  });
  Object.defineProperty(SpotifyWebPlayer2.prototype, "render", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _a2 = this.state, currentDeviceId = _a2.currentDeviceId, deviceId = _a2.deviceId, devices = _a2.devices, error = _a2.error, errorType = _a2.errorType, isActive = _a2.isActive, isMagnified = _a2.isMagnified, isPlaying = _a2.isPlaying, isUnsupported = _a2.isUnsupported, nextTracks = _a2.nextTracks, playerPosition = _a2.playerPosition, position = _a2.position, previousTracks = _a2.previousTracks, status = _a2.status, track = _a2.track, volume = _a2.volume;
      var _b = this.props, locale = _b.locale, name = _b.name, showSaveIcon = _b.showSaveIcon, token = _b.token, updateSavedStatus = _b.updateSavedStatus;
      var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;
      var isPlaybackError = errorType === "playback_error";
      var localeMerged = getLocale(locale);
      var output = (0, import_jsx_runtime22.jsx)(Loader, { styles: this.styles });
      var info;
      if (isPlaybackError) {
        info = (0, import_jsx_runtime22.jsx)("p", { children: error });
      }
      if (isReady) {
        if (!info) {
          info = (0, import_jsx_runtime22.jsx)(Info_default, { isActive, locale: localeMerged, onFavoriteStatusChange: this.handleFavoriteStatusChange, showSaveIcon, styles: this.styles, token, track, updateSavedStatus });
        }
        output = (0, import_jsx_runtime22.jsxs)(import_jsx_runtime22.Fragment, { children: [(0, import_jsx_runtime22.jsx)("div", { children: info }), (0, import_jsx_runtime22.jsx)(Controls, { isExternalDevice: this.isExternalPlayer, isPlaying, locale: localeMerged, nextTracks, onClickNext: this.handleClickNext, onClickPrevious: this.handleClickPrevious, onClickTogglePlay: this.handleClickTogglePlay, previousTracks, styles: this.styles }), (0, import_jsx_runtime22.jsx)(Actions, { currentDeviceId, deviceId, devices, isDevicesOpen: isUnsupported && !deviceId, locale: localeMerged, onClickDevice: this.handleClickDevice, playerPosition, setVolume: this.setVolume, styles: this.styles, volume })] });
      }
      if (status === STATUS.ERROR) {
        output = (0, import_jsx_runtime22.jsxs)(ErrorMessage, __assign26({ styles: this.styles }, { children: [name, ": ", error] }));
      }
      return (0, import_jsx_runtime22.jsxs)(Player_default, __assign26({ ref: this.ref, styles: this.styles }, { children: [isReady && (0, import_jsx_runtime22.jsx)(Slider_default, { isMagnified, onChangeRange: this.handleChangeRange, onToggleMagnify: this.handleToggleMagnify, position, styles: this.styles }), (0, import_jsx_runtime22.jsx)(Content, __assign26({ styles: this.styles }, { children: output }))] }));
    }
  });
  Object.defineProperty(SpotifyWebPlayer2, "defaultProps", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
      magnifySliderOnHover: false,
      name: "Spotify Web Player",
      showSaveIcon: false,
      syncExternalDeviceInterval: 5,
      syncExternalDevice: false
    }
  });
  return SpotifyWebPlayer2;
}(React9.PureComponent);
var esm_default2 = SpotifyWebPlayer;

// dep:react-spotify-web-playback
var react_spotify_web_playback_default = esm_default2;
export {
  STATUS,
  TYPE,
  react_spotify_web_playback_default as default
};
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
//# sourceMappingURL=react-spotify-web-playback.js.map
